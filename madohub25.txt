-- SUPPORTED GAMES
-- MM2 (1)
-- SLAP TOWER  (2)
-- DEAS RAILS (3)


--Murder Mystery 2
if game.PlaceId == 142823291 then

-- WindUI
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

-- Locals
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local CurrentCamera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local CoreGui = game:GetService("CoreGui")

function gradient(text, startColor, endColor)
    local result = ""
    local length = #text

    for i = 1, length do
        local t = (i - 1) / math.max(length - 1, 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)

        local char = text:sub(i, i)
        result = result .. "<font color=\"rgb(" .. r ..", " .. g .. ", " .. b .. ")\">" .. char .. "</font>"
    end

    return result
end

local Confirmed = false

WindUI:Popup({
    Title = gradient("MadoHub", Color3.fromHex("#eb1010"), Color3.fromHex("#1023eb")),
    Icon = "info",
    Content = gradient("This script made by", Color3.fromHex("#10eb3c"), Color3.fromHex("#67c97a")) .. gradient(" Mado", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")),
    Buttons = {
        {
            Title = gradient("Cancel", Color3.fromHex("#e80909"), Color3.fromHex("#630404")),
            Callback = function() end,
            Variant = "Tertiary", -- Primary, Secondary, Tertiary
        },
        {
            Title = gradient("Load", Color3.fromHex("#90f09e"), Color3.fromHex("#13ed34")),
            Callback = function() Confirmed = true end,
            Variant = "Secondary", -- Primary, Secondary, Tertiary
        }
    }
})

repeat task.wait() until Confirmed

WindUI:Notify({
    Title = gradient("MadoHub", Color3.fromHex("#eb1010"), Color3.fromHex("#1023eb")),
    Content = "",
    Icon = "check-circle",
    Duration = 3,
})

-- Window
local Window = WindUI:CreateWindow({
    Title = gradient("MadoHub", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")),
    Icon = "infinity",
    Author = gradient("Murder Mystery 2", Color3.fromHex("#1bf2b2"), Color3.fromHex("#1bcbf2")),
    Folder = "WindUI",
    Size = UDim2.fromOffset(300, 270),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 200,
    UserEnabled = true,
    HasOutline = true,
})

-- Open Button
Window:EditOpenButton({
    Title = "Open UI",
    Icon = "monitor",
    CornerRadius = UDim.new(2, 6),
    StrokeThickness = 2,
    Color = ColorSequence.new(
        Color3.fromHex("1E213D"),
        Color3.fromHex("1F75FE")
    ),
    Draggable = true,
})

-- Tabs
local Tabs = {
    MainTab = Window:Tab({ Title = gradient("MAIN", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "terminal" }),
    CharacterTab = Window:Tab({ Title = gradient("CHARACTER", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "file-cog" }),
    TeleportTab = Window:Tab({ Title = gradient("TELEPORT", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "user" }),
    EspTab = Window:Tab({ Title = gradient("ESP", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "eye" }),
    AimbotTab = Window:Tab({ Title = gradient("AIMBOT", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "arrow-right" }),
    CombatTab = Window:Tab({ Title = gradient("COMBAT", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "sword"}),
    AutoFarm = Window:Tab({ Title = gradient("AUTOFARM", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "coin"}),
    ServerTab = Window:Tab({ Title = gradient("SERVER", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "atom", }),
    beed = Window:Divider(),
    SettingsTab = Window:Tab({ Title = gradient("SETTINGS", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "code" }),
    ChangelogsTab = Window:Tab({ Title = gradient("CHANGELOGS", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "info"}),
    SocialsTab = Window:Tab({ Title = gradient("SOCIALS", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "star"}),
    b = Window:Divider(),
    WindowTab = Window:Tab({ Title = gradient("CONFIGURATION", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "settings", Desc = "Manage window settings and file configurations." }),
    CreateThemeTab = Window:Tab({ Title = gradient("THEMES", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "palette", Desc = "Design and apply custom themes." }),
}

-- Character
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local CharacterSettings = {
    WalkSpeed = {Value = 16, Default = 16, Locked = false},
    JumpPower = {Value = 50, Default = 50, Locked = false}
}

local function updateCharacter()
    local character = LocalPlayer.Character
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        if not CharacterSettings.WalkSpeed.Locked then
            humanoid.WalkSpeed = CharacterSettings.WalkSpeed.Value
        end
        if not CharacterSettings.JumpPower.Locked then
            humanoid.JumpPower = CharacterSettings.JumpPower.Value
        end
    end
end
Tabs.CharacterTab:Section({Title = gradient("Walkspeed", Color3.fromHex("#ff0000"), Color3.fromHex("#300000"))})

Tabs.CharacterTab:Slider({
    Title = "Walkspeed",
    Value = {Min = 0, Max = 200, Default = 16},
    Callback = function(value)
        CharacterSettings.WalkSpeed.Value = value
        updateCharacter()
    end
})

Tabs.CharacterTab:Button({
    Title = "Reset walkspeed",
    Callback = function()
        CharacterSettings.WalkSpeed.Value = CharacterSettings.WalkSpeed.Default
        updateCharacter()
    end
})

Tabs.CharacterTab:Toggle({
    Title = "Block walkspeed",
    Default = false,
    Callback = function(state)
        CharacterSettings.WalkSpeed.Locked = state
        updateCharacter()
    end
})

Tabs.CharacterTab:Section({Title = gradient("JumpPower", Color3.fromHex("#001aff"), Color3.fromHex("#020524"))})

Tabs.CharacterTab:Slider({
    Title = "Jumppower",
    Value = {Min = 0, Max = 200, Default = 50},
    Callback = function(value)
        CharacterSettings.JumpPower.Value = value
        updateCharacter()
    end
})


Tabs.CharacterTab:Button({
    Title = "Reset jumppower",
    Callback = function()
        CharacterSettings.JumpPower.Value = CharacterSettings.JumpPower.Default
        updateCharacter()
    end
})

Tabs.CharacterTab:Toggle({
    Title = "Block jumppower",
    Default = false,
    Callback = function(state)
        CharacterSettings.JumpPower.Locked = state
        updateCharacter()
    end
})

-- ESP
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LP = Players.LocalPlayer

local ESPConfig = {
    HighlightMurderer = false,
    HighlightInnocent = false,
    HighlightSheriff = false
}

local Murder, Sheriff, Hero
local roles = {}

function CreateHighlight(player)
    if player ~= LP and player.Character and not player.Character:FindFirstChild("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Parent = player.Character
        highlight.Adornee = player.Character
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        return highlight
    end
    return player.Character and player.Character:FindFirstChild("Highlight")
end

function RemoveAllHighlights()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("Highlight") then
            player.Character.Highlight:Destroy()
        end
    end
end

function UpdateHighlights()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and player.Character then
            local highlight = player.Character:FindFirstChild("Highlight")
            if not (ESPConfig.HighlightMurderer or ESPConfig.HighlightInnocent or ESPConfig.HighlightSheriff) then
                if highlight then
                    highlight:Destroy()
                end
                return
            end
            
            local shouldHighlight = false
            local color = Color3.new(0, 1, 0)
            if player.Name == Murder and IsAlive(player) and ESPConfig.HighlightMurderer then
                color = Color3.fromRGB(255, 0, 0)
                shouldHighlight = true
            elseif player.Name == Sheriff and IsAlive(player) and ESPConfig.HighlightSheriff then
                color = Color3.fromRGB(0, 0, 255)
                shouldHighlight = true
            elseif ESPConfig.HighlightInnocent and IsAlive(player) and 
                   player.Name ~= Murder and player.Name ~= Sheriff and player.Name ~= Hero then
                color = Color3.fromRGB(0, 255, 0)
                shouldHighlight = true
            elseif player.Name == Hero and IsAlive(player) and not IsAlive(game.Players[Sheriff]) and ESPConfig.HighlightSheriff then
                color = Color3.fromRGB(255, 250, 0)
                shouldHighlight = true
            end
            
            if shouldHighlight then
                highlight = CreateHighlight(player)
                if highlight then
                    highlight.FillColor = color
                    highlight.OutlineColor = color
                    highlight.Enabled = true
                end
            elseif highlight then
                highlight.Enabled = false
            end
        end
    end
end

function IsAlive(player)
    for name, data in pairs(roles) do
        if player.Name == name then
            return not data.Killed and not data.Dead
        end
    end
    return false
end

local function UpdateRoles()
    roles = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    for name, data in pairs(roles) do
        if data.Role == "Murderer" then
            Murder = name
        elseif data.Role == 'Sheriff' then
            Sheriff = name
        elseif data.Role == 'Hero' then
            Hero = name
        end
    end
end

Tabs.EspTab:Section({Title = gradient("Special ESP", Color3.fromHex("#b914fa"), Color3.fromHex("#7023c2"))})

Tabs.EspTab:Toggle({
    Title = gradient("Higlight Murder", Color3.fromHex("#e80909"), Color3.fromHex("#630404")),
    Default = false,
    Callback = function(state) 
        ESPConfig.HighlightMurderer = state
        if not state then UpdateHighlights() end
    end
})

Tabs.EspTab:Toggle({
    Title = gradient("Highlight Innocent", Color3.fromHex("#0ff707"), Color3.fromHex("#1e690c")),
    Default = false,
    Callback = function(state) 
        ESPConfig.HighlightInnocent = state
        if not state then UpdateHighlights() end
    end
})

Tabs.EspTab:Toggle({
    Title = gradient("Highlight Sheriff", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")),
    Default = false,
    Callback = function(state) 
        ESPConfig.HighlightSheriff = state
        if not state then UpdateHighlights() end
    end
})

local gunDropESPEnabled = false
local gunDropHighlight = nil

-- Список всех возможных карт
local mapPaths = {
    "ResearchFacility", "Hospital3", "MilBase", "House2", 
    "Workplace", "Mansion2", "BioLab", "Hotel", 
    "Factory", "Bank2", "PoliceStation"
}

-- Функция создания подсветки для GunDrop
local function createGunDropHighlight(gunDrop)
    if gunDropESPEnabled and gunDrop and not gunDrop:FindFirstChild("GunDropHighlight") then
        local highlight = Instance.new("Highlight")
        highlight.Name = "GunDropHighlight"
        highlight.FillColor = Color3.fromRGB(255, 215, 0) -- Золотой цвет
        highlight.OutlineColor = Color3.fromRGB(255, 165, 0)
        highlight.Adornee = gunDrop
        highlight.Parent = gunDrop
    end
end

-- Функция обновления ESP
local function updateGunDropESP()
    -- Удаляем старые подсветки
    for _, mapName in pairs(mapPaths) do
        local map = workspace:FindFirstChild(mapName)
        if map then
            local gunDrop = map:FindFirstChild("GunDrop")
            if gunDrop and gunDrop:FindFirstChild("GunDropHighlight") then
                gunDrop.GunDropHighlight:Destroy()
            end
        end
    end

    -- Создаем новые подсветки если ESP включен
    if gunDropESPEnabled then
        for _, mapName in pairs(mapPaths) do
            local map = workspace:FindFirstChild(mapName)
            if map then
                local gunDrop = map:FindFirstChild("GunDrop")
                if gunDrop then
                    createGunDropHighlight(gunDrop)
                end
            end
        end
    end
end

-- Мониторинг появления GunDrop на всех картах
local function monitorGunDrops()
    for _, mapName in pairs(mapPaths) do
        local map = workspace:FindFirstChild(mapName)
        if map then
            map.ChildAdded:Connect(function(child)
                if child.Name == "GunDrop" then
                    createGunDropHighlight(child)
                end
            end)
        end
    end
end

monitorGunDrops()

Tabs.EspTab:Toggle({
    Title = gradient("GunDrop Highlight", Color3.fromHex("#ffff00"), Color3.fromHex("#4f4f00")),
    Default = false,
    Callback = function(state)
        gunDropESPEnabled = state
        updateGunDropESP()
    end
})

-- Автоматическое обновление при смене карты
workspace.ChildAdded:Connect(function(child)
    if table.find(mapPaths, child.Name) then
        task.wait(2) -- Ждем загрузку карты
        updateGunDropESP()
    end
end)

RunService.RenderStepped:Connect(function()
    UpdateRoles()
    if ESPConfig.HighlightMurderer or ESPConfig.HighlightInnocent or ESPConfig.HighlightSheriff then
        UpdateHighlights()
    end
end)

Players.PlayerRemoving:Connect(function(player)
    if player == LP then
        RemoveAllHighlights()
    end
end)

-- Teleport
local teleportTarget = nil

local function updateTeleportPlayers()
    local playersList = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(playersList, player.Name)
        end
    end
    return playersList
end

Tabs.TeleportTab:Section({Title = gradient("Default TP", Color3.fromHex("#00448c"), Color3.fromHex("#0affd6"))})

local teleportDropdown = Tabs.TeleportTab:Dropdown({
    Title = "Players",
    Values = updateTeleportPlayers(),
    Value = "Select Player",
    Callback = function(selected)
        teleportTarget = Players:FindFirstChild(selected)
    end
})

local function teleportToPlayer()
    if teleportTarget and teleportTarget.Character then
        local targetRoot = teleportTarget.Character:FindFirstChild("HumanoidRootPart")
        local localRoot = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        
        if targetRoot and localRoot then
            localRoot.CFrame = targetRoot.CFrame
            WindUI:Notify({
                Title = "Teleportation",
                Content = "Successfully teleported to "..teleportTarget.Name,
                Icon = "check-circle",
                Duration = 3
            })
        end
    else
        WindUI:Notify({
            Title = "Error",
            Content = "Target not found or unavailable",
            Icon = "x-circle",
            Duration = 3
        })
    end
end

Tabs.TeleportTab:Button({
    Title = "Teleport to player",
    Callback = teleportToPlayer
})

Tabs.TeleportTab:Button({
    Title = "Update players list",
    Callback = function()
        teleportDropdown:Refresh(updateTeleportPlayers())  -- ✅ CORRECT
    end
})

Players.PlayerAdded:Connect(function()
    teleportDropdown:Refresh(updateTeleportPlayers())
end)

Players.PlayerRemoving:Connect(function()
    teleportDropdown:Refresh(updateTeleportPlayers())
end)

teleportDropdown:Refresh(updateTeleportPlayers())

Tabs.TeleportTab:Section({Title = gradient("Special TP", Color3.fromHex("#b914fa"), Color3.fromHex("#7023c2"))})

Tabs.TeleportTab:Button({
    Title = "Teleport to Sheriff",
    Callback = function()
        UpdateRoles()
        if Sheriff then
            local sheriffPlayer = Players:FindFirstChild(Sheriff)
            if sheriffPlayer and sheriffPlayer.Character then
                local targetRoot = sheriffPlayer.Character:FindFirstChild("HumanoidRootPart")
                local localRoot = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                
                if targetRoot and localRoot then
                    localRoot.CFrame = targetRoot.CFrame
                    WindUI:Notify({
                        Title = "Teleportation",
                        Content = "Successfully teleported to the sheriff "..Sheriff,
                        Icon = "check-circle",
                        Duration = 3
                    })
                end
            else
                WindUI:Notify({
                    Title = "Error",
                    Content = "Sheriff not found or unavailable",
                    Icon = "x-circle",
                    Duration = 3
                })
            end
        else
            WindUI:Notify({
                Title = "Error",
                Content = "Sheriff is not defined in the current match",
                Icon = "x-circle",
                Duration = 3
            })
        end
    end
})

Tabs.TeleportTab:Button({
    Title = "Teleport to Murderer",
    Callback = function()
        UpdateRoles()
        if Murder then
            local murderPlayer = Players:FindFirstChild(Murder)
            if murderPlayer and murderPlayer.Character then
                local targetRoot = murderPlayer.Character:FindFirstChild("HumanoidRootPart")
                local localRoot = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                
                if targetRoot and localRoot then
                    localRoot.CFrame = targetRoot.CFrame
                    WindUI:Notify({
                        Title = "Teleportation",
                        Content = "Successfully teleported to the murderer "..Murder,
                        Icon = "check-circle",
                        Duration = 3
                    })
                end
            else
                WindUI:Notify({
                    Title = "Error",
                    Content = "Murderer not found or unavailable",
                    Icon = "x-circle",
                    Duration = 3
                })
            end
        else
            WindUI:Notify({
                Title = "Error",
                Content = "Murderer is not defined in the current match",
                Icon = "x-circle",
                Duration = 3
            })
        end
    end
})

Players.PlayerAdded:Connect(function()
    teleportDropdown:Refresh({updateTeleportPlayers()})
end)

Players.PlayerRemoving:Connect(function()
    teleportDropdown:Refresh({updateTeleportPlayers()})
end)

-- Aimbot
local roles = {}
local Murder, Sheriff
local isCameraLocked = false
local isSpectating = false
local lockedRole = nil
local cameraConnection = nil
local originalCameraType = Enum.CameraType.Custom
local originalCameraSubject = nil

function IsAlive(player)
    for name, data in pairs(roles) do
        if player.Name == name then
            return not data.Killed and not data.Dead
        end
    end
    return false
end

local function UpdateRoles()
    local success, result = pcall(function()
        return ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    end)
    if success then
        roles = result or {}
        Murder, Sheriff = nil, nil
        for name, data in pairs(roles) do
            if data.Role == "Murderer" then Murder = name
            elseif data.Role == 'Sheriff' then Sheriff = name end
        end
    end
end

Tabs.AimbotTab:Section({Title = gradient("Default AimBot", Color3.fromHex("#00448c"), Color3.fromHex("#0affd6"))})

RoleDropdown = Tabs.AimbotTab:Dropdown({
    Title = "Target Role",
    Values = {"None", "Sheriff", "Murderer"},
    Value = "None",
    Callback = function(selected)
        lockedRole = (selected ~= "None") and selected or nil
    end
})

Tabs.AimbotTab:Toggle({
    Title = "Spectate Mode",
    Default = false,
    Callback = function(state)
        isSpectating = state
        if state then
            originalCameraType = CurrentCamera.CameraType
            originalCameraSubject = CurrentCamera.CameraSubject
            CurrentCamera.CameraType = Enum.CameraType.Scriptable
        else
            CurrentCamera.CameraType = originalCameraType
            CurrentCamera.CameraSubject = originalCameraSubject
        end
    end
})

Tabs.AimbotTab:Toggle({
    Title = "Lock Camera",
    Default = false,
    Callback = function(state)
        isCameraLocked = state
        if not state and not isSpectating then
            CurrentCamera.CameraType = originalCameraType
            CurrentCamera.CameraSubject = originalCameraSubject
        end
    end
})

local function GetTargetPosition()
    if not lockedRole then return nil end
    local targetName = lockedRole == "Sheriff" and Sheriff or Murder
    if not targetName then return nil end
    local player = Players:FindFirstChild(targetName)
    if not player or not IsAlive(player) then return nil end
    local character = player.Character
    if not character then return nil end
    local head = character:FindFirstChild("Head")
    return head and head.Position or nil
end

local function UpdateSpectate()
    if not isSpectating or not lockedRole then return end
    local targetPos = GetTargetPosition()
    if not targetPos then return end
    local offset = CFrame.new(0, 2, 8)
    local targetChar = Players:FindFirstChild(lockedRole == "Sheriff" and Sheriff or Murder).Character
    if targetChar then
        local root = targetChar:FindFirstChild("HumanoidRootPart")
        if root then
            CurrentCamera.CFrame = root.CFrame * offset
        end
    end
end

local function UpdateLockCamera()
    if not isCameraLocked or not lockedRole then return end
    local targetPos = GetTargetPosition()
    if not targetPos then return end
    local currentPos = CurrentCamera.CFrame.Position
    CurrentCamera.CFrame = CFrame.new(currentPos, targetPos)
end

local function Update()
    if isSpectating then
        UpdateSpectate()
    elseif isCameraLocked then
        UpdateLockCamera()
    end
end

local function AutoUpdate()
    while true do
        UpdateRoles()
        task.wait(3)
    end
end

coroutine.wrap(AutoUpdate)()
cameraConnection = RunService.RenderStepped:Connect(Update)

LocalPlayer.AncestryChanged:Connect(function()
    if not LocalPlayer.Parent and cameraConnection then
        cameraConnection:Disconnect()
        CurrentCamera.CameraType = originalCameraType
        CurrentCamera.CameraSubject = originalCameraSubject
    end
end)

UpdateRoles()

local SilentAim = {
    Enabled = false,
    Prediction = 0.14
}

-- Получаем убийцу
local function GetMurderer()
    local success, roles = pcall(function()
        return game:GetService("ReplicatedStorage"):FindFirstChild("GetPlayerData", true):InvokeServer()
    end)
    if success and roles then
        for name, data in pairs(roles) do
            if data.Role == "Murderer" then
                return game:GetService("Players"):FindFirstChild(name)
            end
        end
    end
    return nil
end

-- Основной хук
local oldNamecall
oldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
    if SilentAim.Enabled and not checkcaller() then
        local method = getnamecallmethod()
        if method == "InvokeServer" and tostring(self) == "HitPart" then
            local murderer = GetMurderer()
            if murderer and murderer.Character then
                local head = murderer.Character:FindFirstChild("Head")
                if head then
                    local root = murderer.Character:FindFirstChild("HumanoidRootPart")
                    local predictedPos = root.Position + (root.Velocity * SilentAim.Prediction)
                    return oldNamecall(self, predictedPos, head)
                end
            end
        end
    end
    return oldNamecall(self, ...)
end)

-- Просто тоггл в UI
local Toggle = Tabs.AimbotTab:Toggle({
    Title = "Silent Aim",
    Default = false,
    Callback = function(state)
        SilentAim.Enabled = state
    end
})

-- Combat
local function KnifeKillNearest()
    local nearestPlayer, minDist = nil, math.huge
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local dist = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if dist < minDist then
                nearestPlayer = player
                minDist = dist
            end
        end
    end
    
    if nearestPlayer then
        game:GetService("ReplicatedStorage").Remotes.Gameplay.KnifeKill:FireServer(
            nearestPlayer.Character.HumanoidRootPart.Position
        )
    end
end

local function EquipWeapon()
    local role = roles[game.Players.LocalPlayer.Name].Role
    local weaponType = (role == "Sheriff") and "Gun" or "Knife"
    
    game:GetService("ReplicatedStorage").Remotes.Inventory.Equip:FireServer(weaponType)
end

Tabs.CombatTab:Section({
    Title = gradient("For all roles", Color3.fromHex("#ffff00"), Color3.fromHex("#4f4f00")), 
})

Tabs.CombatTab:Button({
    Title = "Auto-Equip Weapon",
    Callback = EquipWeapon
})

Tabs.CombatTab:Section({
    Title = gradient("Innocent", Color3.fromHex("#0ff707"), Color3.fromHex("#1e690c")), 
})

-- Конфигурация
local config = {
    GunDropESP = false,
    AutoGrabGun = false,
    NotifyGunDrop = true,
    HighlightColor = Color3.fromRGB(255, 215, 0), -- Золотой
    OutlineColor = Color3.fromRGB(255, 165, 0),
    CheckInterval = 1 -- Проверка каждую секунду
}

-- Список всех карт
local mapPaths = {
    "ResearchFacility", "Hospital3", "MilBase", "House2", 
    "Workplace", "Mansion2", "BioLab", "Hotel", 
    "Factory", "Bank2", "PoliceStation"
}

-- Кэш найденных GunDrop
local activeGunDrops = {}

-- Основная функция поиска GunDrop
local function scanForGunDrops()
    activeGunDrops = {} -- Очищаем кэш
    
    -- Проверяем все карты
    for _, mapName in pairs(mapPaths) do
        local map = workspace:FindFirstChild(mapName)
        if map then
            local gunDrop = map:FindFirstChild("GunDrop")
            if gunDrop then
                table.insert(activeGunDrops, gunDrop)
                if config.GunDropESP then
                    createGunDropVisual(gunDrop)
                end
            end
        end
    end
    
    -- Проверяем корневой workspace
    local rootGunDrop = workspace:FindFirstChild("GunDrop")
    if rootGunDrop then
        table.insert(activeGunDrops, rootGunDrop)
        if config.GunDropESP then
            createGunDropVisual(rootGunDrop)
        end
    end
    
    -- Уведомление если нашли новый GunDrop
    if config.NotifyGunDrop and #activeGunDrops > 0 then
        WindUI:Notify({
            Title = "Gun Drop Spawned",
            Content = "Sheriff was killed. Gun is available!",
            Icon = "alert-circle",
            Duration = 5
        })
    end
    
    -- Автоподбор если включен
    if config.AutoGrabGun and #activeGunDrops > 0 then
        local nearestGun = nil
        local minDist = math.huge
        
        -- Ищем ближайший GunDrop
        for _, gunDrop in pairs(activeGunDrops) do
            local dist = (LocalPlayer.Character.HumanoidRootPart.Position - gunDrop.Position).Magnitude
            if dist < minDist then
                nearestGun = gunDrop
                minDist = dist
            end
        end
        
        -- Телепортируемся и подбираем
        if nearestGun then
            LocalPlayer.Character.HumanoidRootPart.CFrame = nearestGun.CFrame
            task.wait(0.3)
            fireproximityprompt(nearestGun:FindFirstChildOfClass("ProximityPrompt"))
        end
    end
end

-- Мониторинг новых GunDrop
local function monitorNewGunDrops()
    for _, mapName in pairs(mapPaths) do
        local map = workspace:FindFirstChild(mapName)
        if map then
            map.ChildAdded:Connect(function(child)
                if child.Name == "GunDrop" then
                    table.insert(activeGunDrops, child)
                    if config.GunDropESP then
                        createGunDropVisual(child)
                    end
                    scanForGunDrops() -- Обновляем список
                end
            end)
        end
    end
end

Tabs.CombatTab:Toggle({
    Title = "Auto Grab Gun",
    Default = false,
    Callback = function(state)
        config.AutoGrabGun = state
    end
})

Tabs.CombatTab:Toggle({
    Title = "Notify GunDrop",
    Default = true,
    Callback = function(state)
        config.NotifyGunDrop = state
    end
})

Tabs.CombatTab:Button({
    Title = "Grab Nearest Gun",
    Callback = function()
        scanForGunDrops()
        if #activeGunDrops > 0 then
            local nearest = activeGunDrops[1]
            LocalPlayer.Character.HumanoidRootPart.CFrame = nearest.CFrame
            task.wait(0.3)
            fireproximityprompt(nearest:FindFirstChildOfClass("ProximityPrompt"))
        else
            WindUI:Notify({
                Title = "No Gun Found",
                Content = "There are no guns available on the map",
                Icon = "x-circle",
                Duration = 3
            })
        end
    end
})

-- Инициализация
monitorNewGunDrops()

-- Главный цикл
coroutine.wrap(function()
    while true do
        scanForGunDrops()
        if config.GunDropESP then
            updateGunDropDistance()
        end
        task.wait(config.CheckInterval)
    end
end)()

Tabs.CombatTab:Section({
    Title = gradient("Murder", Color3.fromHex("#e80909"), Color3.fromHex("#630404")), 
})

local function KillSheriff()
    -- Получаем текущего шерифа
    local sheriffName = nil
    local roles = game:GetService("ReplicatedStorage"):FindFirstChild("GetPlayerData", true):InvokeServer()
    for name, data in pairs(roles) do
        if data.Role == "Sheriff" then
            sheriffName = name
            break
        end
    end

    if sheriffName then
        local sheriff = game.Players:FindFirstChild(sheriffName)
        if sheriff and sheriff.Character then
            -- Телепортация к шерифу
            LocalPlayer.Character.HumanoidRootPart.CFrame = sheriff.Character.HumanoidRootPart.CFrame
            
            -- Убийство
            game:GetService("ReplicatedStorage").Remotes.Gameplay.KnifeKill:FireServer(
                sheriff.Character.HumanoidRootPart.Position
            )
            
            WindUI:Notify({
                Title = "Kill Sheriff",
                Content = "Successfully killed the sheriff!",
                Icon = "check-circle",
                Duration = 3
            })
        end
    else
        WindUI:Notify({
            Title = "Error",
            Content = "Sheriff not found!",
            Icon = "x-circle",
            Duration = 3
        })
    end
end

Tabs.CombatTab:Button({
    Title = "Kill Sheriff",
    Callback = KillSheriff
})

Tabs.CombatTab:Button({
    Title = "Kill Player",
    Callback = function()
        local players = {}
        for _, player in ipairs(game.Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                table.insert(players, player)
            end
        end

        -- Сортируем по расстоянию (от ближнего к дальнему)
        table.sort(players, function(a, b)
            local aDist = (a.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            local bDist = (b.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            return aDist < bDist
        end)

        -- Убиваем по очереди
        for _, player in ipairs(players) do
            -- Телепортируемся к игроку
            LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
            -- Убиваем
            game:GetService("ReplicatedStorage").Remotes.Gameplay.KnifeKill:FireServer(
                player.Character.HumanoidRootPart.Position
            )
        end

        WindUI:Notify({
            Title = "Kill All",
            Content = "All players killed (nearest first)!",
            Icon = "check-circle",
            Duration = 3
        })
    end
})

local Remotes = {
    Eliminate = game:GetService("ReplicatedStorage").Remotes.Gameplay.EliminatePlayer,
    Perk = game:GetService("ReplicatedStorage").Remotes.Gameplay.ActivatePerk,
    Kill = game:GetService("ReplicatedStorage").Remotes.Gameplay.KillEvent,
    Gun = game:GetService("ReplicatedStorage").Remotes.Gameplay.GunKill,
    Mobile = game:GetService("StarterGui").InteractGUI.Mobile.Use,
    Equip = game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Gameplay.Equip
}

local function TryAllKillMethods(target)
    if not target or not target.Character then return false end
    
    local targetPart = target.Character:FindFirstChild("Head") or target.Character:FindFirstChild("HumanoidRootPart")
    if not targetPart then return false end

    -- 1. Основные методы убийства
    pcall(function() Remotes.Gun:FireServer(targetPart.Position, targetPart) end)
    pcall(function() Remotes.Kill:FireServer(targetPart.Position, targetPart) end)
    pcall(function() Remotes.Eliminate:FireServer(target) end)
    
    -- 2. Дополнительные методы (перки/мобильные)
    pcall(function() Remotes.Perk:FireServer("Damage", target) end)
    pcall(function() Remotes.Mobile:Fire("Shoot") end)
    
    -- 3. Форсированная экипировка оружия
    if not LocalPlayer.Character:FindFirstChildOfClass("Tool") then
        pcall(function() Remotes.Equip:Fire("Gun") end)
        task.wait(0.3)
    end
    
    return true
end

local function SmartShoot()
    local murderer = GetMurderer()
    if not murderer then
        WindUI:Notify({Title="Error", Content="Murderer not found!", Icon="x-circle"})
        return
    end

    -- Поворот камеры на цель
    local head = murderer.Character:FindFirstChild("Head")
    if head then
        CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, head.Position)
        task.wait(0.2)
    end

    -- Попытка всех методов убийства
    local success = TryAllKillMethods(murderer)
    
    -- Визуальное подтверждение
    WindUI:Notify({
    Title = success and "Success" or "Error",
    Content = success and "Attack on "..murderer.Name.." executed!" or "Failed to attack",
    Icon = success and "check-circle" or "x-circle"
})
end

Tabs.CombatTab:Section({
    Title = gradient("Sheriff", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9"))
})

Tabs.CombatTab:Button({
    Title = "Shoot Murderer",
    Callback = SmartShoot
})
-- Settings
local Settings = {
    Hitbox = {
        Enabled = false,
        Size = 5,
        Color = Color3.new(1,0,0),
        Adornments = {},
        Connections = {}
    },
    Noclip = {
        Enabled = false,
        Connection = nil
    },
    AntiAFK = {
        Enabled = false,
        Connection = nil
    }
}

local function ToggleNoclip(state)
        if state then
            Settings.Noclip.Connection = RunService.Stepped:Connect(function()
                local chr = LocalPlayer.Character
                if chr then
                    for _, part in pairs(chr:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
                end)
        else
            if Settings.Noclip.Connection then
                Settings.Noclip.Connection:Disconnect()
            end
        end
end

local function UpdateHitboxes()
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= LocalPlayer then
                local chr = plr.Character
                local box = Settings.Hitbox.Adornments[plr]
                
                if chr and Settings.Hitbox.Enabled then
                    local root = chr:FindFirstChild("HumanoidRootPart")
                    if root then
                        if not box then
                            box = Instance.new("BoxHandleAdornment")
                            box.Adornee = root
                            box.Size = Vector3.new(Settings.Hitbox.Size, Settings.Hitbox.Size, Settings.Hitbox.Size)
                            box.Color3 = Settings.Hitbox.Color
                            box.Transparency = 0.4
                            box.ZIndex = 10
                            box.Parent = root
                            Settings.Hitbox.Adornments[plr] = box
                        else
                            box.Size = Vector3.new(Settings.Hitbox.Size, Settings.Hitbox.Size, Settings.Hitbox.Size)
                            box.Color3 = Settings.Hitbox.Color
                        end
                    end
                elseif box then
                    box:Destroy()
                    Settings.Hitbox.Adornments[plr] = nil
                end
            end
        end
end

local function ToggleAntiAFK(state)
        if state then
            Settings.AntiAFK.Connection = RunService.Heartbeat:Connect(function()
                pcall(function()
                    local vu = game:GetService("VirtualUser")
                    vu:CaptureController()
                    vu:ClickButton2(Vector2.new())
                end)
            end)
        else
            if Settings.AntiAFK.Connection then
                Settings.AntiAFK.Connection:Disconnect()
            end
        end
end

Tabs.SettingsTab:Section({
    Title = gradient("Hitboxes", Color3.fromHex("#ff0000"), Color3.fromHex("#ff8800"))
})

Tabs.SettingsTab:Toggle({
    Title = "Hixboxes",
    Callback = function(state)
        Settings.Hitbox.Enabled = state
        if state then
            RunService.Heartbeat:Connect(UpdateHitboxes)
        else
            for _, box in pairs(Settings.Hitbox.Adornments) do
                box:Destroy()
            end
            Settings.Hitbox.Adornments = {}
        end
    end
})

Tabs.SettingsTab:Slider({
    Title = "Hitbox size",
    Value = {Min=1, Max=10, Default=5},
    Callback = function(val)
        Settings.Hitbox.Size = val
        UpdateHitboxes()
    end
})

Tabs.SettingsTab:Colorpicker({
    Title = "Hitbox color",
    Default = Color3.new(1,0,0),
    Callback = function(col)
        Settings.Hitbox.Color = col
        UpdateHitboxes()
    end
})

Tabs.SettingsTab:Section({
    Title = gradient("Character Functions", Color3.fromHex("#00eaff"), Color3.fromHex("#002a2e"))
})


Tabs.SettingsTab:Toggle({
    Title = "Anti-AFK",
    Callback = function(state)
        Settings.AntiAFK.Enabled = state
        ToggleAntiAFK(state)
    end
})

Tabs.SettingsTab:Toggle({
    Title = "NoClip",
    Callback = function(state)
        Settings.Noclip.Enabled = state
        ToggleNoclip(state)
    end
})

-- Auto Exec

Tabs.SettingsTab:Section({
    Title = gradient("Auto Execute", Color3.fromHex("#00ff40"), Color3.fromHex("#88f2a2"))
})

local AutoInject = {
    Enabled = false,
    ScriptURL = ""
}

Tabs.SettingsTab:Toggle({
    Title = "Auto Inject on Rejoin/Hop",
    Default = false,
    Callback = function(state)
        AutoInject.Enabled = state
        if state then
            SetupAutoInject()
            WindUI:Notify({
                Title = "Auto Inject",
                Content = "Auto-inject enabled! The script will restart automatically.",
                Duration = 3
            })
        else
            WindUI:Notify({
                Title = "Auto Inject",
                Content = "Auto-inject disabled",
                Duration = 3
            })
        end
    end
})

local function SetupAutoInject()
    if not AutoInject.Enabled then return end
    
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    spawn(function()
        wait(2)
        if AutoInject.Enabled then
            pcall(function()
                loadstring(game:HttpGet(AutoInject.ScriptURL))()
            end)
        end
    end)

    LocalPlayer.OnTeleport:Connect(function(state)
        if state == Enum.TeleportState.Started and AutoInject.Enabled then
            queue_on_teleport([[
                wait(2)
                loadstring(game:HttpGet("]]..AutoInject.ScriptURL..[["))()
            ]])
        end
    end)

    game:GetService("Players").PlayerRemoving:Connect(function(player)
        if player == LocalPlayer and AutoInject.Enabled then
            queue_on_teleport([[
                wait(2)
                loadstring(game:HttpGet("]]..AutoInject.ScriptURL..[["))()
            ]])
        end
    end)
end

Tabs.SettingsTab:Button({
    Title = "Manual Re-Inject",
    Callback = function()
        pcall(function()
            loadstring(game:HttpGet(AutoInject.ScriptURL))()
            WindUI:Notify({
                Title = "Manual Inject",
                Content = "Script reloaded successfully!",
                Duration = 3
            })
        end)
    end
})

-- Socials
Tabs.SocialsTab:Paragraph({
    Title = gradient("MadoHub Discord", Color3.fromHex("#7289DA"), Color3.fromHex("#99aab5")),
    Desc = "Join our Discord",
    Image = "bird",
    Color = "White",
    Buttons = {
        {
            Title = "Join Discord",
            Icon = "circle",
            Callback = function()
                setclipboard("https://discord.gg/w9m6Q53Akb")
WindUI:Notify({
    Title = "Copied!",
    Content = "Discord link copied.\nPaste it anywhere in Discord or a browser.",
    Icon = "check-circle",
    Duration = 5
})
            end,
        }
    }
})

-- Changelogs
Tabs.ChangelogsTab:Code({
    Title = "Changelogs:",
    Code = [[
    RELEASED:
    • Script has been released
    • Shoot murder function works
    • Silent aimbot works
    • Special aimbot works
    • Kill neariest player works
    • TP to murder/sheriff function
    • Esp all: murderer, sheriff, innocent
   More functions will be added in future!
]]
})

Tabs.ChangelogsTab:Code({
    Title = "Next update:",
    Code = [[ The next update will be version V1]
    In future we will be add:
    • Autofarm coins
    • TP to Lobby
    • Fix bugs
   Thank you for using MadoHub!
]]
})

-- Server
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

Tabs.ServerTab:Button({
    Title = "Rejoin",
    Callback = function()
        local success, error = pcall(function()
            TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, Players.LocalPlayer)
        end)
        if not success then
            warn("Rejoin error:", error)
        end
    end
})

Tabs.ServerTab:Section({
    Title = ""
})

Tabs.ServerTab:Button({
    Title = "Server Hop",
    Callback = function()
        local placeId = game.PlaceId
        local currentJobId = game.JobId
        
        local function serverHop()
            local servers = {}
            local success, result = pcall(function()
                return HttpService:JSONDecode(HttpService:GetAsync("https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Asc&limit=100"))
            end)
            
            if success and result and result.data then
                for _, server in ipairs(result.data) do
                    if server.id ~= currentJobId then
                        table.insert(servers, server)
                    end
                end
                
                if #servers > 0 then
                    TeleportService:TeleportToPlaceInstance(placeId, servers[math.random(#servers)].id)
                else
                    TeleportService:Teleport(placeId)
                end
            else
                TeleportService:Teleport(placeId)
            end
        end
        
        pcall(serverHop)
    end
})

Tabs.ServerTab:Button({
    Title = "Join to Lower Server",
    Callback = function()
        local placeId = game.PlaceId
        local currentJobId = game.JobId
        
        local function joinLowerServer()
            local servers = {}
            local success, result = pcall(function()
                return HttpService:JSONDecode(HttpService:GetAsync("https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Asc&limit=100"))
            end)
            
            if success and result and result.data then
                for _, server in ipairs(result.data) do
                    if server.id ~= currentJobId and server.playing < (server.maxPlayers or 30) then
                        table.insert(servers, server)
                    end
                end
                
                table.sort(servers, function(a, b)
                    return a.playing < b.playing
                end)
                
                if #servers > 0 then
                    TeleportService:TeleportToPlaceInstance(placeId, servers[1].id)
                else
                    TeleportService:Teleport(placeId)
                end
            else
                TeleportService:Teleport(placeId)
            end
        end
        
        pcall(joinLowerServer)
    end
})

-- Configuration
local HttpService = game:GetService("HttpService")

local folderPath = "WindUI"
makefolder(folderPath)

local function SaveFile(fileName, data)
    local filePath = folderPath .. "/" .. fileName .. ".json"
    local jsonData = HttpService:JSONEncode(data)
    writefile(filePath, jsonData)
end

local function LoadFile(fileName)
    local filePath = folderPath .. "/" .. fileName .. ".json"
    if isfile(filePath) then
        local jsonData = readfile(filePath)
        return HttpService:JSONDecode(jsonData)
    end
end

local function ListFiles()
    local files = {}
    for _, file in ipairs(listfiles(folderPath)) do
        local fileName = file:match("([^/]+)%.json$")
        if fileName then
            table.insert(files, fileName)
        end
    end
    return files
end

Tabs.WindowTab:Section({ Title = "Window" })
local themeValues = {}
for name, _ in pairs(WindUI:GetThemes()) do
    table.insert(themeValues, name)
end

local themeDropdown = Tabs.WindowTab:Dropdown({
    Title = "Select Theme",
    Multi = false,
    AllowNone = false,
    Value = nil,
    Values = themeValues,
    Callback = function(theme)
        WindUI:SetTheme(theme)
    end
})

themeDropdown:Select(WindUI:GetCurrentTheme())

local ToggleTransparency = Tabs.WindowTab:Toggle({
    Title = "Toggle Window Transparency",
    Callback = function(e)
        Window:ToggleTransparency(e)
    end,
    Value = WindUI:GetTransparency()
})

Tabs.WindowTab:Section({ Title = "Save" })

local fileNameInput = ""
Tabs.WindowTab:Input({
    Title = "Write File Name",
    PlaceholderText = "Enter file name",
    Callback = function(text)
        fileNameInput = text
    end
})

Tabs.WindowTab:Button({
    Title = "Save File",
    Callback = function()
        if fileNameInput ~= "" then
            SaveFile(fileNameInput, { Transparent = WindUI:GetTransparency(), Theme = WindUI:GetCurrentTheme() })
        end
    end
})

Tabs.WindowTab:Section({ Title = "Load" })

local filesDropdown
local files = ListFiles()

filesDropdown = Tabs.WindowTab:Dropdown({
    Title = "Select File",
    Multi = false,
    AllowNone = true,
    Values = files,
    Callback = function(selectedFile)
        fileNameInput = selectedFile
    end
})

Tabs.WindowTab:Button({
    Title = "Load File",
    Callback = function()
        if fileNameInput ~= "" then
            local data = LoadFile(fileNameInput)
            if data then
                WindUI:Notify({
                    Title = "File Loaded",
                    Content = "Loaded data: " .. HttpService:JSONEncode(data),
                Duration = 5,
                })
                if data.Transparent then 
                    Window:ToggleTransparency(data.Transparent)
                    ToggleTransparency:SetValue(data.Transparent)
                end
                if data.Theme then WindUI:SetTheme(data.Theme) end
            end
        end
    end
})

Tabs.WindowTab:Button({
    Title = "Overwrite File",
    Callback = function()
        if fileNameInput ~= "" then
            SaveFile(fileNameInput, { Transparent = WindUI:GetTransparency(), Theme = WindUI:GetCurrentTheme() })
        end
    end
})

Tabs.WindowTab:Button({
    Title = "Refresh List",
    Callback = function()
        filesDropdown:Refresh(ListFiles())
    end
})

-- Themes
local currentThemeName = WindUI:GetCurrentTheme()
local themes = WindUI:GetThemes()

local ThemeAccent = themes[currentThemeName].Accent
local ThemeOutline = themes[currentThemeName].Outline
local ThemeText = themes[currentThemeName].Text
local ThemePlaceholderText = themes[currentThemeName].PlaceholderText

function updateTheme()
    WindUI:AddTheme({
        Name = currentThemeName,
        Accent = ThemeAccent,
        Outline = ThemeOutline,
        Text = ThemeText,
        PlaceholderText = ThemePlaceholderText
    })
    WindUI:SetTheme(currentThemeName)
end

Tabs.CreateThemeTab:Colorpicker({
    Title = "Background Color",
    Default = Color3.fromHex(ThemeAccent),
    Callback = function(color)
        ThemeAccent = color
    end
})

Tabs.CreateThemeTab:Colorpicker({
    Title = "Outline Color",
    Default = Color3.fromHex(ThemeOutline),
    Callback = function(color)
        ThemeOutline = color
    end
})

Tabs.CreateThemeTab:Colorpicker({
    Title = "Text Color",
    Default = Color3.fromHex(ThemeText),
    Callback = function(color)
        ThemeText = color
    end
})

Tabs.CreateThemeTab:Colorpicker({
    Title = "Placeholder Text Color",
    Default = Color3.fromHex(ThemePlaceholderText),
    Callback = function(color)
        ThemePlaceholderText = color
    end
})

Tabs.CreateThemeTab:Button({
    Title = "Update Theme",
    Callback = function()
        WindUI:AddTheme({
            Name = currentThemeName,
            Accent = ThemeAccent,
            Outline = ThemeOutline,
            Text = ThemeText,
            PlaceholderText = ThemePlaceholderText
        })
        WindUI:SetTheme(currentThemeName)
        WindUI:Notify({
            Title = "Theme updated",
            Content = "New theme '"..currentThemeName.."' применена!",
            Duration = 3,
            Icon = "check-circle"
        })
    end
})


-- Slap Tower
elseif game.PlaceId == 95508886069297 then

-- WindUI
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

-- Locals
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local CurrentCamera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")

function gradient(text, startColor, endColor)
    local result = ""
    local length = #text

    for i = 1, length do
        local t = (i - 1) / math.max(length - 1, 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)

        local char = text:sub(i, i)
        result = result .. "<font color=\"rgb(" .. r ..", " .. g .. ", " .. b .. ")\">" .. char .. "</font>"
    end

    return result
end

local Confirmed = false

WindUI:Popup({
    Title = gradient("MadoHub", Color3.fromHex("#eb1010"), Color3.fromHex("#1023eb")),
    Icon = "info",
    Content = gradient("Made by Mado", Color3.fromHex("#10eb3c"), Color3.fromHex("#67c97a")),
    Buttons = {
        {
            Title = gradient("Cancel", Color3.fromHex("#e80909"), Color3.fromHex("#630404")),
            Callback = function() end,
            Variant = "Tertiary",
        },
        {
            Title = gradient("Load", Color3.fromHex("#90f09e"), Color3.fromHex("#13ed34")),
            Callback = function() Confirmed = true end,
            Variant = "Secondary",
        }
    }
})

repeat task.wait() until Confirmed

WindUI:Notify({
    Title = gradient("MadoHub", Color3.fromHex("#eb1010"), Color3.fromHex("#1023eb")),
    Content = "Script loaded successfully!",
    Icon = "check-circle",
    Duration = 3,
})

-- Window
local Window = WindUI:CreateWindow({
    Title = gradient("MadoHub", Color3.fromHex("#001e80"), Color3.fromHex("#16f2d9")),
    Icon = "infinity",
    Author = gradient("Slap Tower | Made with ❤️ By Mado", Color3.fromHex("#1bf2b2"), Color3.fromHex("#1bcbf2")),
    Folder = "WindUI",
    Size = UDim2.fromOffset(350, 400),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 200,
    UserEnabled = true,
    HasOutline = true,
})

-- Open Button
Window:EditOpenButton({
    Title = "Open UI",
    Icon = "monitor",
    CornerRadius = UDim.new(2, 6),
    StrokeThickness = 2,
    Color = ColorSequence.new(
        Color3.fromHex("1E213D"),
        Color3.fromHex("1F75FE")
    ),
    Draggable = true,
})

-- Tabs
local Tabs = {
    MainTab = Window:Tab({ Title = gradient("MAIN", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "terminal" }),
    TeleportTab = Window:Tab({ Title = gradient("TELEPORT", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "user" }),
    CharacterTab = Window:Tab({ Title = gradient("CHARACTER", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "file-cog" }),
    CombatTab = Window:Tab({ Title = gradient("WallHop", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "sword"}),
    SettingsTab = Window:Tab({ Title = gradient("SETTINGS", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "code" }),
    ChangelogsTab = Window:Tab({ Title = gradient("CHANGELOGS", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "info"}),
    SocialsTab = Window:Tab({ Title = gradient("SOCIALS", Color3.fromHex("#ffffff"), Color3.fromHex("#636363")), Icon = "star"}),
    
}

-- Character Settings
local CharacterSettings = {
    WalkSpeed = {Value = 16, Default = 16, Locked = false},
    JumpPower = {Value = 50, Default = 50, Locked = false}
}

local function updateCharacter()
    local character = LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            if not CharacterSettings.WalkSpeed.Locked then
                humanoid.WalkSpeed = CharacterSettings.WalkSpeed.Value
            end
            if not CharacterSettings.JumpPower.Locked then
                humanoid.JumpPower = CharacterSettings.JumpPower.Value
            end
        end
    end
end

-- Character Tab
Tabs.CharacterTab:Section({Title = gradient("Walkspeed", Color3.fromHex("#ff0000"), Color3.fromHex("#300000"))})

Tabs.CharacterTab:Slider({
    Title = "Walkspeed",
    Value = {Min = 0, Max = 200, Default = 16},
    Callback = function(value)
        CharacterSettings.WalkSpeed.Value = value
        updateCharacter()
    end
})

Tabs.CharacterTab:Button({
    Title = "Reset walkspeed",
    Callback = function()
        CharacterSettings.WalkSpeed.Value = CharacterSettings.WalkSpeed.Default
        updateCharacter()
    end
})

Tabs.CharacterTab:Toggle({
    Title = "Block walkspeed",
    Default = false,
    Callback = function(state)
        CharacterSettings.WalkSpeed.Locked = state
        updateCharacter()
    end
})

Tabs.CharacterTab:Section({Title = gradient("JumpPower", Color3.fromHex("#001aff"), Color3.fromHex("#020524"))})

Tabs.CharacterTab:Slider({
    Title = "Jumppower",
    Value = {Min = 0, Max = 200, Default = 50},
    Callback = function(value)
        CharacterSettings.JumpPower.Value = value
        updateCharacter()
    end
})

Tabs.CharacterTab:Button({
    Title = "Reset jumppower",
    Callback = function()
        CharacterSettings.JumpPower.Value = CharacterSettings.JumpPower.Default
        updateCharacter()
    end
})

Tabs.CharacterTab:Toggle({
    Title = "Block jumppower",
    Default = false,
    Callback = function(state)
        CharacterSettings.JumpPower.Locked = state
        updateCharacter()
    end
})

-- Main Tab
local SlapPositions = {
    Vector3.new(-10.94, -10.70, 107.81),
    Vector3.new(-21.23, -10.70, 19.53),
    Vector3.new(183.88, -10.70, 80.83),
    Vector3.new(-180.55, 769.30, 53.09),
    Vector3.new(-185.15, 769.30, 68.09),
    Vector3.new(-48.21, -3.70, 19.33)
}

local PlatformPositions = {
    Vector3.new(33.47, 166.20, 32.44),
    Vector3.new(33.36, 166.98, 45.94),
    Vector3.new(34.47, 166.15, 59.85),
    Vector3.new(38.54, 170.56, 86.89)
}

local platformToggle = false

Tabs.MainTab:Section({Title = gradient("Slap Collection", Color3.fromHex("#ff00ff"), Color3.fromHex("#800080"))})

Tabs.MainTab:Button({
    Title = "Collect All Slaps",
    Callback = function()
        local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart")
        for _, pos in ipairs(SlapPositions) do
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                hrp.CFrame = CFrame.new(pos)
                task.wait(1)
            end
        end
    end
})

Tabs.MainTab:Button({
    Title = "Load Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end
})

Tabs.MainTab:Toggle({
    Title = "Auto Platforms",
    Default = false,
    Callback = function(state)
        platformToggle = state
        if state then
            local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local hrp = char:WaitForChild("HumanoidRootPart")
            spawn(function()
                while platformToggle do
                    for _, pos in ipairs(PlatformPositions) do
                        if not platformToggle then break end
                        hrp.CFrame = CFrame.new(pos)
                        task.wait(0.1)
                    end
                end
            end)
        end
    end
})

-- Teleport Tab
Tabs.TeleportTab:Section({Title = gradient("Locations", Color3.fromHex("#00448c"), Color3.fromHex("#0affd6"))})

Tabs.TeleportTab:Button({
    Title = "Troll Area 1",
    Callback = function()
        local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart")
        hrp.CFrame = CFrame.new(34.26, 169.30, 20.66)
    end
})

Tabs.TeleportTab:Button({
    Title = "Troll Area 2",
    Callback = function()
        local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart")
        hrp.CFrame = CFrame.new(31.93, 169.30, 94.45)
    end
})

Tabs.TeleportTab:Button({
    Title = "End Area",
    Callback = function()
        local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart")
        hrp.CFrame = CFrame.new(-169.684875, 769.303284, 54.4955521, -0.0013725179, 6.12260331e-09, 0.999999046, -9.64387254e-08, 1, -6.25497298e-09, -0.999999046, -9.64472235e-08, -0.0013725179)
    end
})

-- Combat Tab
Tabs.CombatTab:Section({Title = gradient("Combat", Color3.fromHex("#ff0000"), Color3.fromHex("#800000"))})

Tabs.CombatTab:Button({
    Title = "Fake Wall Hop",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ScpGuest666/Random-Roblox-script/refs/heads/main/Roblox%20WallHop%20V3%20script"))()
    end
})

-- Settings Tab
local Settings = {
    Noclip = {
        Enabled = false,
        Connection = nil
    },
    AntiAFK = {
        Enabled = false,
        Connection = nil
    }
}

local function ToggleNoclip(state)
    if state then
        Settings.Noclip.Connection = RunService.Stepped:Connect(function()
            local chr = LocalPlayer.Character
            if chr then
                for _, part in pairs(chr:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        if Settings.Noclip.Connection then
            Settings.Noclip.Connection:Disconnect()
        end
    end
end

local function ToggleAntiAFK(state)
    if state then
        Settings.AntiAFK.Connection = RunService.Heartbeat:Connect(function()
            pcall(function()
                local vu = game:GetService("VirtualUser")
                vu:CaptureController()
                vu:ClickButton2(Vector2.new())
            end)
        end)
    else
        if Settings.AntiAFK.Connection then
            Settings.AntiAFK.Connection:Disconnect()
        end
    end
end

Tabs.SettingsTab:Section({Title = gradient("Character", Color3.fromHex("#00eaff"), Color3.fromHex("#002a2e"))})

Tabs.SettingsTab:Toggle({
    Title = "Anti-AFK",
    Callback = function(state)
        Settings.AntiAFK.Enabled = state
        ToggleAntiAFK(state)
    end
})

Tabs.SettingsTab:Toggle({
    Title = "NoClip",
    Callback = function(state)
        Settings.Noclip.Enabled = state
        ToggleNoclip(state)
    end
})

-- Character connection
LocalPlayer.CharacterAdded:Connect(function(character)
    updateCharacter()
end)

-- Changelogs
Tabs.ChangelogsTab:Code({
    Title = "Changelogs:",
    Code = [[
    RELEASED:
    • Script has been released
   don't know if i will put more features in this game..
]]
})

-- Socials
Tabs.SocialsTab:Paragraph({
    Title = gradient("MadoHub Discord", Color3.fromHex("#7289DA"), Color3.fromHex("#99aab5")),
    Desc = "Join our Discord",
    Image = "bird",
    Color = "White",
    Buttons = {
        {
            Title = "Join Discord",
            Icon = "circle",
            Callback = function()
                setclipboard("https://discord.gg/w9m6Q53Akb")
WindUI:Notify({
    Title = "Copied!",
    Content = "Discord link copied.\nPaste it anywhere in Discord or a browser.",
    Icon = "check-circle",
    Duration = 5
})
            end,
        }
    }
})

-- Themes
local currentThemeName = WindUI:GetCurrentTheme()
local themes = WindUI:GetThemes()

local ThemeAccent = themes[currentThemeName].Accent
local ThemeOutline = themes[currentThemeName].Outline
local ThemeText = themes[currentThemeName].Text
local ThemePlaceholderText = themes[currentThemeName].PlaceholderText

function updateTheme()
    WindUI:AddTheme({
        Name = currentThemeName,
        Accent = ThemeAccent,
        Outline = ThemeOutline,
        Text = ThemeText,
        PlaceholderText = ThemePlaceholderText
    })
    WindUI:SetTheme(currentThemeName)
end

Tabs.CreateThemeTab:Colorpicker({
    Title = "Background Color",
    Default = Color3.fromHex(ThemeAccent),
    Callback = function(color)
        ThemeAccent = color
    end
})

Tabs.CreateThemeTab:Colorpicker({
    Title = "Outline Color",
    Default = Color3.fromHex(ThemeOutline),
    Callback = function(color)
        ThemeOutline = color
    end
})

Tabs.CreateThemeTab:Colorpicker({
    Title = "Text Color",
    Default = Color3.fromHex(ThemeText),
    Callback = function(color)
        ThemeText = color
    end
})

Tabs.CreateThemeTab:Colorpicker({
    Title = "Placeholder Text Color",
    Default = Color3.fromHex(ThemePlaceholderText),
    Callback = function(color)
        ThemePlaceholderText = color
    end
})

Tabs.CreateThemeTab:Button({
    Title = "Update Theme",
    Callback = function()
        WindUI:AddTheme({
            Name = currentThemeName,
            Accent = ThemeAccent,
            Outline = ThemeOutline,
            Text = ThemeText,
            PlaceholderText = ThemePlaceholderText
        })
        WindUI:SetTheme(currentThemeName)
        WindUI:Notify({
            Title = "Theme updated",
            Content = "New theme '"..currentThemeName.."' применена!",
            Duration = 3,
            Icon = "check-circle"
        })
    end
})

-- Initial update
updateCharacter()

-- Break In 2
elseif game.PlaceId ==  then

-- Place Check
if game.PlaceId ~= 13864667823 then
	if game.PlaceId == 14775231477 or game.PlaceId == 13864661000 then
		
	-- Free Gamepasses (LOBBY)
		local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/RScriptz/RobloxScripts/main/OrionLibKeybind.lua')))()
		local Window = OrionLib:MakeWindow({
			Name = "MadoHub",
			HidePremium = false,
			SaveConfig = true,
			ConfigFolder = "OrionTest",
			IntroText = "Loading Script..."
		})
		local Tab = Window:MakeTab({
			Name = "Free Gamepasses",
			Icon = "rbxassetid://4483345998",
			PremiumOnly = false
		})
		Tab:AddButton({
			Name = "Free Hacker Role",
			Callback = function()
				game:GetService("ReplicatedStorage").RemoteEvents.OutsideRole:FireServer("Phone", true, false)
			end
		})
		Tab:AddButton({
			Name = "Free Nerd Kid Role",
			Callback = function()
				game:GetService("ReplicatedStorage").RemoteEvents.OutsideRole:FireServer("Book", true, false)
			end
		})
		local Tab = Window:MakeTab({
			Name = "Socials",
			Icon = "rbxassetid://4483345998",
			PremiumOnly = false
		})
		Tab:AddButton({
			Name = "Join our Discord",
			Callback = function()
				
			end
		})
		OrionLib:Init()
		for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
			if v.Name == "Part" and v:FindFirstChild("TouchInterest") then
				firetouchinterest(v, game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, 0)
			end
		end
	else
		game:GetService("Players").LocalPlayer:Kick("Error! Game Not Supported!")
	end
else
    	-- Floating Part
	local Part = Instance.new("Part")
	Part.Size = Vector3.new(5, 1, 5)
	Part.Parent = game:GetService("Workspace")
	Part.Anchored = true
	Part.Transparency = 1

	-- Locals
	local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/RScriptz/RobloxScripts/main/OrionLibKeybind.lua')))()
	local Events = game:GetService("ReplicatedStorage"):WaitForChild("Events")
	local SelectedItem = "Med Kit"
	local Damange = 5
	local namecall
	local ScriptLoaded = false
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local Lighting = game:GetService("Lighting")
	local OriginalWalkspeed = LocalPlayer.Character.Humanoid.WalkSpeed
	local OriginalJumpPower = LocalPlayer.Character.Humanoid.JumpPower
	local ModifiedWalkspeed = 50
	local ModifiedJumpPower = 100
	local OriginalBrightness = Lighting.Brightness
	local OriginalFog = Lighting.FogEnd
	local OriginalShadow = Lighting.GlobalShadows
	local HailClone = game:GetService("Workspace").Hails:Clone()
	getgenv().RemoveSlipping = false
	getgenv().SemiGodmode = false

    -- Remove Slipping Handler
	local mt = getrawmetatable(game)
	local old = mt.__namecall
	setreadonly(mt, false)
	mt.__namecall = newcclosure(function(self, ...)
		local args = {
			...
		}
		if getnamecallmethod() == 'FireServer' and self.Name == 'IceSlip' and RemoveSlipping == true then
			return task.wait(387420489)
		end
		return old(self, unpack(args))
	end)

    -- Semi-Godmode Handler
	namecall = hookmetamethod(game, "__namecall", function(self, ...)
		local args = {
			...
		}
		if getnamecallmethod() == 'FireServer' and self.Name == 'Energy' then
			if SemiGodmode == true then
				if args[1] < 0 then
					args[1] = 0
				end
			else
				args[1] = args[1]
			end
			return namecall(self, unpack(args))
		end
		return namecall(self, ...)
	end)

-- Tables
	local SecretEndingTable = {
		"HatCollected",
		"MaskCollected",
		"CrowbarCollected"
	}

	local ItemsTable = {
		"Crowbar 1",
		"Crowbar 2",
		"Bat",
		"Pitchfork",
		"Hammer",
		"Wrench",
		"Broom",
		"Armor",
		"Med Kit",
		"Key",
		"Gold Key",
		"Louise",
		"Lollipop",
		"Chips",
		"Golden Apple",
		"Pizza",
		"Gold Pizza",
		"Rainbow Pizza",
		"Rainbow Pizza Box",
		"Book",
		"Phone",
		"Cookie",
		"Apple",
		"Bloxy Cola",
		"Expired Bloxy Cola",
		"Bottle",
		"Ladder",
		"Battery"
	}

	-- Functions
	local function Notify(name, content, image, time)
		OrionLib:MakeNotification({
			Name = name,
			Content = content,
			Image = image,
			Time = time
		})
	end

	local function Delete(Instance)
		pcall(function()
			Events:WaitForChild("OnDoorHit"):FireServer(Instance)
		end)
	end

	local function UnequipAllTools()
		for i, v in pairs(LocalPlayer.Character:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = LocalPlayer.Backpack
			end
		end
	end

	local function EquipAllTools()
		for i, v in pairs(LocalPlayer.Backpack:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = LocalPlayer.Character
			end
		end
	end

	local function GiveItem(Item)
		if Item == "Armor" then
			Events:WaitForChild("Vending"):FireServer(3, "Armor2", "Armor", tostring(LocalPlayer), 1)
		elseif Item == "Crowbar 1" or Item == "Crowbar 2" or Item == "Bat" or Item == "Pitchfork" or Item == "Hammer" or Item == "Wrench" or Item == "Broom" then
			Events.Vending:FireServer(3, tostring(Item:gsub(" ", "")), "Weapons", LocalPlayer.Name, 1)
			Notify('Credits To', "Leo Dicap On V3rmillion For Making This Feature!", 'rbxassetid://4483345998', 3)
		else
			Events:WaitForChild("GiveTool"):FireServer(tostring(Item:gsub(" ", "")))
		end
	end

	local function GetBestTool()
		for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Assets.Note.Note.Note:GetChildren()) do
			if v.Name:match("Circle") and v.Visible == true then
				GiveItem(tostring(v.Name:gsub("Circle", "")))
			end
		end
	end

	local function Train(Ability)
		Events:WaitForChild("RainbowWhatStat"):FireServer(Ability)
	end

	local function TakeDamange(Amount)
		Events:WaitForChild("Energy"):FireServer(-Amount, false, false)
	end

	local function TeleportTo(CFrameArg)
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrameArg
	end

	local function GiveAll()
		GetBestTool()
		task.wait(.1)
		GiveItem("Armor")
		task.wait(.1)
		for i = 1, 5 do
			Train("Speed")
			Train("Strength")
		end
		task.wait(.1)
		UnequipAllTools()
		for i = 1, 15 do
			GiveItem("Gold Pizza")
			task.wait(0.05)
		end
	end

	local function HealAllPlayers()
		UnequipAllTools()
		task.wait(.2)
		GiveItem("Golden Apple")
		task.wait(.5)
		LocalPlayer.Backpack:WaitForChild("GoldenApple").Parent = LocalPlayer.Character
		task.wait(.5)
		Events:WaitForChild("HealTheNoobs"):FireServer()
	end

	local function HealYourself()
		GiveItem("Pizza")
		Events.Energy:FireServer(25, "Pizza")
	end

	local function BreakBarricades()
		for i, v in pairs(game:GetService("Workspace").FallenTrees:GetChildren()) do
			for i = 1, 20 do
				if v:FindFirstChild("TreeHitPart") then
					Events.RoadMissionEvent:FireServer(1, v.TreeHitPart, 5)
				end
			end
		end
	end

	local function BreakEnemies()
		pcall(function()
			for i, v in pairs(game:GetService("Workspace").BadGuys:GetChildren()) do
				v:FindFirstChild("Humanoid", true).Health = 0
			end
			for i, v in pairs(game:GetService("Workspace").BadGuysBoss:GetChildren()) do
				v:FindFirstChild("Humanoid", true).Health = 0
			end
			for i, v in pairs(game:GetService("Workspace").BadGuysFront:GetChildren()) do
				v:FindFirstChild("Humanoid", true).Health = 0
			end
		end)
	end

	local function KillEnemies()
		pcall(function()
			for i, v in pairs(game:GetService("Workspace").BadGuys:GetChildren()) do
				Events:WaitForChild("HitBadguy"):FireServer(v, 64.8, 4)
			end
			for i, v in pairs(game:GetService("Workspace").BadGuysBoss:GetChildren()) do
				Events:WaitForChild("HitBadguy"):FireServer(v, 64.8, 4)
			end
			for i, v in pairs(game:GetService("Workspace").BadGuysFront:GetChildren()) do
				Events:WaitForChild("HitBadguy"):FireServer(v, 64.8, 4)
			end
			if game:GetService("Workspace"):FindFirstChild("BadGuyPizza", true) then
				Events:WaitForChild("HitBadguy"):FireServer(game:GetService("Workspace"):FindFirstChild("BadGuyPizza", true), 64.8, 4)
			end
			if game:GetService("Workspace"):FindFirstChild("BadGuyBrute") then
				Events:WaitForChild("HitBadguy"):FireServer(game:GetService("Workspace").BadGuyBrute, 64.8, 4)
			end
		end)
	end

	local function GetDog()
		for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Assets.Note.Note.Note:GetChildren()) do
			if v.Name:match("Circle") and v.Visible == true then
				GiveItem(tostring(v.Name:gsub("Circle", "")))
				task.wait(.1)
				LocalPlayer.Backpack:WaitForChild(tostring(v.Name:gsub("Circle", ""))).Parent = LocalPlayer.Character
				TeleportTo(CFrame.new(-257.56839, 29.4499969, -910.452637, -0.238445505, 7.71292363e-09, 0.971155882, 1.2913591e-10, 1, -7.91029819e-09, -0.971155882, -1.76076387e-09, -0.238445505))
				task.wait(.5)
				Events:WaitForChild("CatFed"):FireServer(tostring(v.Name:gsub("Circle", "")))
			end
		end
		task.wait(2)
		for i = 1, 3 do
			TeleportTo(CFrame.new(-203.533081, 30.4500484, -790.901428, -0.0148558766, 8.85941187e-09, -0.999889672, 2.65695732e-08, 1, 8.46563175e-09, 0.999889672, -2.64408779e-08, -0.0148558766) + Vector3.new(0, 5, 0))
			task.wait(.1)
		end
	end

	local function GetAgent()
		GiveItem("Louise")
		task.wait(.1)
		LocalPlayer.Backpack:WaitForChild("Louise").Parent = LocalPlayer.Character
		Events:WaitForChild("LouiseGive"):FireServer(2)
	end

	local function GetUncle()
		GiveItem("Key")
		task.wait(.1)
		LocalPlayer.Backpack:WaitForChild("Key").Parent = LocalPlayer.Character
		wait(.5)
		Events.KeyEvent:FireServer()
	end

	local function ClickPete()
		fireclickdetector(game:GetService("Workspace").UnclePete.ClickDetector)
	end

	local function CollectCash()
		for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
			if v.Name == "Part" and v:FindFirstChild("TouchInterest") and v:FindFirstChild("Weld") and v.Transparency == 1 then
				firetouchinterest(v, LocalPlayer.Character.HumanoidRootPart, 0)
			end
		end
	end

	local function GetAllOutsideItems()
		TeleportTo(CFrame.new(-199.240555, 30.0009422, -790.182739, 0.08340507, 2.48169538e-08, 0.996515751, -2.7112752e-09, 1, -2.46767993e-08, -0.996515751, -6.43658127e-10, 0.08340507))
		for i, v in pairs(game:GetService("Workspace").OutsideParts:GetChildren()) do
			fireclickdetector(v.ClickDetector)
		end
		LocalPlayer.Character.Humanoid:MoveTo(LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(-10, 0, 0))
	end

	local function BringAllEnemies()
		pcall(function()
			for i, v in pairs(game:GetService("Workspace").BadGuys:GetChildren()) do
				v.HumanoidRootPart.Anchored = true
				v.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -4)
			end
			for i, v in pairs(game:GetService("Workspace").BadGuysBoss:GetChildren()) do
				v.HumanoidRootPart.Anchored = true
				v.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -4)
			end
			
			for i, v in pairs(game:GetService("Workspace").BadGuysFront:GetChildren()) do
				v.HumanoidRootPart.Anchored = true
				v.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -4)
			end
		end)
	end

	local function Noclip(State)
		LocalPlayer.Character.HumanoidRootPart.CanCollide = State
		for i, v in pairs(LocalPlayer.Character:GetChildren()) do
			if v:IsA("MeshPart") then
				v.CanCollide = State
			end
		end
	end

	local function GetSecretEnding()
		for i, v in next, SecretEndingTable do
			Events.LarryEndingEvent:FireServer(v, true)
		end
	end

	local function GetGAppleBadge()
		if game:GetService("Workspace"):FindFirstChild("FallenTrees") then
			for i, v in pairs(game:GetService("Workspace").FallenTrees:GetChildren()) do
				for i = 1, 20 do
					if v:FindFirstChild("TreeHitPart") then
						Events.RoadMissionEvent:FireServer(1, v.TreeHitPart, 5)
					end
				end
			end
			task.wait(1)
			TeleportTo(CFrame.new(61.8781624, 29.4499969, -534.381165, -0.584439218, -1.05103076e-07, 0.811437488, -3.12853778e-08, 1, 1.06993674e-07, -0.811437488, 3.71451705e-08, -0.584439218))
			task.wait(.5)
			fireclickdetector(game:GetService("Workspace").GoldenApple.ClickDetector)
		else
			Notify("Error", "Golden Apple Has Not Spawned Yet, Please Wait Until the First Wave.", 'rbxassetid://4483345998', 3)
		end
	end

	local function AntiMud(Touchable)
		for i, v in pairs(game:GetService("Workspace").BogArea.Bog:GetDescendants()) do
			if v.Name == "Mud" and v:IsA("Part") then
				if Touchable == true then
					v.CanTouch = false
				else 
					v.CanTouch = false
				end
			end
		end
	end

	local function SSAntiWind()
		if game:GetService("Workspace"):FindFirstChild("WavePart") then
			Delete(game:GetService("Workspace").WavePart)
		end
	end

	local function AntiWind()
		if game:GetService("Workspace"):FindFirstChild("WavePart") then
			game:GetService("Workspace").WavePart.CanTouch = false
		end
	end
	
	-- Main Script / GUI
	local Window = OrionLib:MakeWindow({
		Name = "Breaking Blitz",
		HidePremium = false,
		SaveConfig = false,
		ConfigFolder = "OrionTest",
		IntroText = "Loading Script..."
	})

	local Tab = Window:MakeTab({
		Name = "Game Breaking",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})
	
	Tab:AddLabel("Server-Side Deletion")
	
	local Section = Tab:AddSection({
		Name = "Mass Deletion"
	})

	Tab:AddButton({
		Name = "Delete The Game",
		Callback = function()
			for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
				Delete(v)
			end
		end    
	})

	Tab:AddButton({
		Name = "Delete The House",
		Callback = function()
			for i, v in pairs(game:GetService("Workspace").TheHouse:GetChildren()) do
				if v.Name ~= "FloorLayer" then
					Delete(v)
				end
			end
		end    
	})

	local Section = Tab:AddSection({
		Name = "Humanoid Deletion"
	})

	Tab:AddTextbox({
		Name = "Delete Player's Humanoid",
		Default = "PlayerName",
		TextDisappear = false,
		Callback = function(Value)
			Delete(game:GetService("Workspace")[Value])
		end	  
	})

	Tab:AddButton({
		Name = "Delete Other's Humanoid",
		Callback = function()
			for i, v in pairs(game:GetService("Players"):GetChildren()) do
				if v.Name ~= tostring(game:GetService("Players").LocalPlayer.Name) then
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name), true))
				end
			end
		end    
	})

	Tab:AddButton({
		Name = "Delete Everyone's Humanoid",
		Callback = function()
			for i, v in pairs(game:GetService("Players"):GetChildren()) do
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name), true))
			end
		end    
	})

	local Section = Tab:AddSection({
		Name = "Limbs Deletion"
	})

	Tab:AddTextbox({
		Name = "Delete Player's Limbs",
		Default = "PlayerName",
		TextDisappear = false,
		Callback = function(Value)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).LeftHand)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).LeftFoot)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).LeftLowerArm)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).LeftLowerLeg)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).LeftUpperArm)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).LeftUpperLeg)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).RightFoot)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).RightHand)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).RightLowerArm)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).RightLowerLeg)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).RightUpperArm)
			Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).RightUpperLeg)
		end	  
	})

	Tab:AddButton({
		Name = "Delete Other's Limbs",
		Callback = function()
			for i, v in pairs(game:GetService("Players"):GetChildren()) do
				if v.Name ~= tostring(game:GetService("Players").LocalPlayer.Name) then
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftHand)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftFoot)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftLowerArm)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftLowerLeg)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftUpperArm)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftUpperLeg)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightFoot)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightHand)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightLowerArm)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightLowerLeg)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightUpperArm)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightUpperLeg)
				end
			end
		end    
	})

	Tab:AddButton({
		Name = "Delete Everyone's Limbs",
		Callback = function()
			for i, v in pairs(game:GetService("Players"):GetChildren()) do
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftHand)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftFoot)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftLowerArm)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftLowerLeg)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftUpperArm)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LeftUpperLeg)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightFoot)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightHand)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightLowerArm)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightLowerLeg)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightUpperArm)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).RightUpperLeg)
			end
		end    
	})

	local Section = Tab:AddSection({
		Name = "Character Freezing"
	})

	Tab:AddTextbox({
		Name = "Freeze Player",
		Default = "PlayerName",
		TextDisappear = false,
		Callback = function(Value)
			pcall(function()
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).LowerTorso)
			end)
		end	  
	})

	Tab:AddButton({
		Name = "Freeze Other's Characters",
		Callback = function()
			for i, v in pairs(game:GetService("Players"):GetChildren()) do
				if v.Name ~= tostring(game:GetService("Players").LocalPlayer.Name) and v:FindFirstChild("LowerTorso") then
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LowerTorso)
				end
			end
		end    
	})

	Tab:AddButton({
		Name = "Freeze Everyone's Characters",
		Callback = function()
			for i, v in pairs(game:GetService("Players"):GetChildren()) do
				if v:FindFirstChild("LowerTorso") then
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).LowerTorso)
				end
			end
		end    
	})

	local Section = Tab:AddSection({
		Name = "Kill Players"
	})

	Tab:AddTextbox({
		Name = "Kill Player",
		Default = "PlayerName",
		TextDisappear = false,
		Callback = function(Value)
			pcall(function()
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).Head)
				Delete(game:GetService("Workspace"):FindFirstChild(tostring(Value)).UpperTorso)
			end)
		end	  
	})

	Tab:AddButton({
		Name = "Kill Others",
		Callback = function()
			for i, v in pairs(game:GetService("Players"):GetChildren()) do
				if v.Name ~= tostring(game:GetService("Players").LocalPlayer.Name) then
					pcall(function()
						Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).Head)
						Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).UpperTorso)
					end)
				end
			end
		end    
	})

	Tab:AddButton({
		Name = "Kill Everyone",
		Callback = function()
			for i, v in pairs(game:GetService("Players"):GetChildren()) do
				pcall(function()
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).Head)
					Delete(game:GetService("Workspace"):FindFirstChild(tostring(v.Name)).UpperTorso)
				end)
			end
		end    
	})

	local Section = Tab:AddSection({
		Name = "Delete Models"
	})

	Tab:AddButton({
		Name = "Delete Treadmills",
		Callback = function()
			Delete(game:GetService("Workspace").Tredmills)
		end    
	})

	Tab:AddButton({
		Name = "Delete Benches",
		Callback = function()
			Delete(game:GetService("Workspace").BenchPresses)
		end    
	})

	Tab:AddButton({
		Name = "Delete TV",
		Callback = function()
			Delete(game:GetService("Workspace").TheHouse.Projector)
		end    
	})

	Tab:AddButton({
		Name = "Delete Vending Machines",
		Callback = function()
			Delete(game:GetService("Workspace").VendingMachines)
		end    
	})

	Tab:AddButton({
		Name = "Delete Boss Room",
		Callback = function()
			Delete(game:GetService("Workspace").Final.BossRoom)
		end    
	})

	local Section = Tab:AddSection({
		Name = "Delete Enemies"
	})

	Tab:AddButton({
		Name = "Delete Bad Guys",
		Callback = function()
			for i, v in pairs(game:GetService("Workspace").BadGuys:GetChildren()) do
				Delete(v)
			end
			for i, v in pairs(game:GetService("Workspace").BadGuysBoss:GetChildren()) do
				Delete(v)
			end
			for i, v in pairs(game:GetService("Workspace").BadGuysFront:GetChildren()) do
				Delete(v)
			end
		end    
	})

	Tab:AddButton({
		Name = "Delete Pizza Miniboss",
		Callback = function()
			Delete(game:GetService("Workspace"):FindFirstChild("BadGuyPizza", true))
		end    
	})

	Tab:AddButton({
		Name = "Delete Brute",
		Callback = function()
			Delete(game:GetService("Workspace").BadGuyBrute)
		end    
	})

	Tab:AddButton({
		Name = "Delete Scary Mary",
		Callback = function()
			if game:GetService("Workspace"):FindFirstChild("Villainess") then
				Delete(game:GetService("Workspace").Villainess)
			else
				Notify('Warning', "Scary Marry Is Already Deleted Or Boss Fight Hasnt Started!", 'rbxassetid://4483345998', 7)
			end
		end
	})

	Tab:AddButton({
		Name = "Delete Scary Larry",
		Callback = function()
			if game:GetService("Workspace"):FindFirstChild("BigBoss") then
				Delete(game:GetService("Workspace").BigBoss)
			else
				Notify('Warning', "Scary Larry Is Already Deleted Or Boss Fight Hasnt Started!", 'rbxassetid://4483345998', 7)
			end
		end
	})

	local Section = Tab:AddSection({
		Name = "Weather Modifications"
	})

	Tab:AddToggle({
		Name = "Remove Wind For Everyone",
		Default = false,
		Callback = function(Value)
			getgenv().NoWindSS = Value
			while NoWindSS == true do
				SSAntiWind() 
				task.wait(.1)
			end
		end    
	})

	Tab:AddButton({
		Name = "Remove Ice For Everyone",
		Callback = function()
			Delete(game:GetService("Workspace").Terrain)
		end    
	})

	Tab:AddButton({
		Name = "Remove Hailing For Everyone",
		Callback = function()
			Delete(game:GetService("Workspace").Hails)
		end    
	})

	Tab:AddButton({
		Name = "Remove Mud For Everyone",
		Callback = function()
			for i, v in pairs(game:GetService("Workspace").BogArea.Bog:GetDescendants()) do
				if v.Name == "Mud" and v:IsA("Part") then
					Delete(v)
				end
			end
		end    
	})
	
	local Tab = Window:MakeTab({
		Name = "Overpowered",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})

	local Section = Tab:AddSection({
		Name = "Item Giver"
	})

	Tab:AddParagraph("Note:", "Getting/Spamming Multiple Of 1 Type Of Items May Cause The Item To Break And Be Unuseable/Unequippable.\nIt Is Recommended To Only Grab 1 Item At Once, Especially If Its An Item Everyone Can Use.")

	Tab:AddDropdown({
		Name = "Item",
		Default = "Med Kit",
		Options = ItemsTable,
		Callback = function(Value)
			if Value == 'Book' or Value == 'Phone' then
				Notify('Warning', Value .. " Wont Work Unless You Own The Corresponding Gamepass.", 'rbxassetid://4483345998', 7)
			end
			SelectedItem = Value
		end
	})

	Tab:AddButton({
		Name = "Get Item",
		Callback = function()
			GiveItem(SelectedItem)
		end
	})

	local Section = Tab:AddSection({
		Name = "Training"
	})

	Tab:AddButton({
		Name = "Train Strength",
		Callback = function()
			Train("Strength")
		end
	})

	Tab:AddButton({
		Name = "Train Speed",
		Callback = function()
			Train("Speed")
		end
	})

	local Section = Tab:AddSection({
		Name = "Heal Youself"
	})

	Tab:AddButton({
		Name = "Heal Yourself",
		Callback = function()
			for i = 1, 10 do
				HealYourself()
			end
		end
	})

	Tab:AddToggle({
		Name = "Loop Heal Yourself",
		Default = false,
		Callback = function(Value)
			getgenv().HealLoop = Value
			while HealLoop do
				HealYourself()
				task.wait(.1)
			end
		end
	})

	local Section = Tab:AddSection({
		Name = "Heal All"
	})

	Tab:AddButton({
		Name = "Heal All",
		Callback = function()
			HealAllPlayers()
		end
	})

	Tab:AddToggle({
		Name = "Loop Heal All",
		Default = false,
		Callback = function(Value)
			getgenv().HealAllLoop = Value
			while HealAllLoop do
				HealAllPlayers()
				task.wait(3)
			end
		end
	})

	local Section = Tab:AddSection({
		Name = "Quality Of Life"
	})

	Tab:AddToggle({
		Name = "Semi-Godmode",
		Default = false,
		Callback = function(Value)
			getgenv().SemiGodmode = Value
			if SemiGodmode == true then
				Notify('Info', "What Semi-Godmode Works On: Special Attacks (Pizza Boss's Pepper Attack, All Scarry Larry/Marry Attacks Except Monster Spawner), Hailing And Possibly Some Others\nWhat Semi-Godmode Doesnt Work On: Enemies, Ice (Use Anti Slip), Getting Locked In A Room While An Enemy Wave Comes, And Possibly Some Others.", 'rbxassetid://4483345998', 7)
			end
		end
	})

	Tab:AddToggle({
		Name = "Remove Slipping",
		Default = false,
		Callback = function(Value)
			getgenv().RemoveSlipping = Value
			if RemoveSlipping == true then
				Notify('Credits To', "Leo Dicap On V3rmillion For Making This Feature!", 'rbxassetid://4483345998', 7)
			end
		end
	})

	Tab:AddToggle({
		Name = "Remove Hailing",
		Default = false,
		Callback = function(Value)
			if Value == false then
				if ScriptLoaded == true then
					HailClone.Parent = game:GetService("Workspace")
				end
			else
				HailClone = game:GetService("Workspace").Hails:Clone()
				game:GetService("Workspace").Hails:Destroy()
			end
		end
	})

	Tab:AddToggle({
		Name = "Remove Wind",
		Default = false,
		Callback = function(Value)
			getgenv().NoWind = Value
			while NoWind == true do
				AntiWind()
				task.wait(.5)
			end
		end
	})

	Tab:AddToggle({
		Name = "Remove Mud",
		Default = false,
		Callback = function(Value)
			AntiMud(Value)
		end
	})

	local Section = Tab:AddSection({
		Name = "Kitchen Food"
	})

	Tab:AddSlider({
		Name = "Table Food Slot",
		Min = 0,
		Max = 4,
		Default = 1,
		Color = Color3.fromRGB(0, 255, 0),
		Increment = 1,
		ValueName = "",
		Callback = function(Value)
			Position = Value
		end    
	})
	
	Tab:AddButton({
		Name = "Spawn Pizza Box",
		Callback = function()
			Events:WaitForChild("OutsideFood"):FireServer(6, {
				["item2"] = "Pizza",
				["placement"] = Position
			})
		end    
	})
	
	Tab:AddButton({
		Name = "Spawn Bloxy Cola",
		Callback = function()
			Events:WaitForChild("OutsideFood"):FireServer(6, {
				["item2"] = "BloxyPack",
				["placement"] = Position
			})
		end    
	})

	local Section = Tab:AddSection({
		Name = "Others"
	})

	Tab:AddToggle({
		Name = "Lag/Crash The Server",
		Default = false,
		Callback = function(Value)
			while Value == true do 
				for i = 1, 10 do
					for i = 1, 4 do
						Events:WaitForChild("OutsideFood"):FireServer(6, {
							["item2"] = "Pizza",
							["placement"] = i
						})
						Events:WaitForChild("OutsideFood"):FireServer(6, {
							["item2"] = "BloxyPack",
							["placement"] = i
						})
					end
				end
				task.wait(.1)
			end
		end    
	})

	Tab:AddButton({
		Name = "Break The Game",
		Callback = function()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.UnclePete.PrimaryPart.CFrame
			task.wait(.5)
			game.Workspace.UnclePete:MoveTo(Vector3.new(math.huge, math.huge, math.huge))	
		end    
	})

	Tab:AddButton({
		Name = "Teleport To Private Lobby",
		Callback = function()
			game:GetService("TeleportService"):Teleport(14775231477, LocalPlayer)
		end
	})

	Tab:AddButton({
		Name = "Unlock Secret Ending",
		Callback = function()
			GetSecretEnding()
		end
	})

	Tab:AddButton({
		Name = "Get The Best Weapon",
		Callback = function()
			GetBestTool()
		end
	})

	Tab:AddButton({
		Name = "Get All Equipment",
		Callback = function()
			GiveAll()
		end
	})

	local Tab = Window:MakeTab({
		Name = "Teleports",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})

	local Section = Tab:AddSection({
		Name = "Main"
	})

	Tab:AddButton({
		Name = "Boss Fight",
		Callback = function()
			TeleportTo(CFrame.new(-1565.78772, -368.711945, -1040.66626, 0.0929690823, -1.97564436e-08, 0.995669007, -1.53269308e-08, 1, 2.1273511e-08, -0.995669007, -1.72383299e-08, 0.0929690823))
		end
	})

	Tab:AddButton({
		Name = "Shop",
		Callback = function()
			TeleportTo(CFrame.new(-246.653229, 30.4500484, -847.319275, 0.999987781, -9.18427645e-08, -0.00494772941, 9.19905787e-08, 1, 2.96483353e-08, 0.00494772941, -3.01031164e-08, 0.999987781))
		end
	})

	Tab:AddButton({
		Name = "Kitchen",
		Callback = function()
			TeleportTo(CFrame.new(-249.753555, 30.4500484, -732.703125, -0.999205947, -1.97705017e-08, 0.0398429185, -2.00601384e-08, 1, -6.86967372e-09, -0.0398429185, -7.66347341e-09, -0.999205947))
		end
	})

	Tab:AddButton({
		Name = "Fighting Arena",
		Callback = function()
			TeleportTo(CFrame.new(-255.521988, 62.7139359, -723.436035, -0.0542500541, 4.28905356e-09, -0.998527408, 1.07862625e-08, 1, 3.70936082e-09, 0.998527408, -1.05691456e-08, -0.0542500541))
		end
	})

	Tab:AddButton({
		Name = "The Gym",
		Callback = function()
			TeleportTo(CFrame.new(-256.477448, 63.4500465, -840.825562, 0.999789953, 2.17116263e-08, 0.020495005, -2.15169358e-08, 1, -9.7199333e-09, -0.020495005, 9.27690191e-09, 0.999789953))
		end
	})

	Tab:AddButton({
		Name = "Golden Apple",
		Callback = function()
			TeleportTo(CFrame.new(61.8781624, 29.4499969, -534.381165, -0.584439218, -1.05103076e-07, 0.811437488, -3.12853778e-08, 1, 1.06993674e-07, -0.811437488, 3.71451705e-08, -0.584439218))
		end
	})

	Tab:AddButton({
		Name = "Feeding Instructions",
		Callback = function()
			TeleportTo(CFrame.new(-207.885056, 60.4500465, -830.583557, 0.118373089, 3.89876789e-08, -0.992969215, 3.47791551e-09, 1, 3.96783406e-08, 0.992969215, -8.15031065e-09, 0.118373089))
		end
	})

	Tab:AddButton({
		Name = "Middle Room",
		Callback = function()
			TeleportTo(CFrame.new(-209.951859, 30.4590473, -789.723877, -0.0485812724, 6.74905039e-08, 0.998819232, 1.19352916e-09, 1, -6.75122394e-08, -0.998819232, -2.08771045e-09, -0.0485812724))
		end
	})

	Tab:AddButton({
		Name = "Scarry Mary Pillar",
		Callback = function()
			TeleportTo(CFrame.new(-1501.49597, -325.156891, -1060.63367, -0.691015959, 7.43958628e-09, 0.722839475, -5.03345055e-09, 1, -1.51040194e-08, -0.722839475, -1.40754954e-08, -0.691015959))
		end
	})

	Tab:AddButton({
		Name = "Outside Loot",
		Callback = function()
			TeleportTo(game:GetService("Workspace").OutsideParts:FindFirstChildWhichIsA("Part", true).CFrame + Vector3.new(10, 0, 0))
		end
	})

	Tab:AddButton({
		Name = "Experiment Room",
		Callback = function()
			TeleportTo(game:GetService("Workspace").Final.Factory.RedDesk.Drawer:GetChildren()[2].CFrame + Vector3.new(20, 0, 0))
		end
	})

	Tab:AddButton({
		Name = "Cafeteria",
		Callback = function()
			TeleportTo(game:GetService("Workspace").Final.Factory:FindFirstChild("Legs", true).CFrame)
		end
	})

	Tab:AddButton({
		Name = "Rainbow Pizza Box",
		Callback = function()
			TeleportTo(game:GetService("Workspace").RainbowPizzaBox.CFrame)
		end
	})

	local Section = Tab:AddSection({
		Name = "Npc's"
	})

	Tab:AddButton({
		Name = "Secret Agent Bradley",
		Callback = function()
			TeleportTo(CFrame.new(-281.792053, 95.4500275, -790.556946, -0.116918251, -7.95074726e-08, -0.993141532, -2.79918044e-09, 1, -7.97270019e-08, 0.993141532, -6.54155974e-09, -0.116918251))
		end
	})

	Tab:AddButton({
		Name = "Twando The Dog",
		Callback = function()
			TeleportTo(CFrame.new(-257.56839, 29.4499969, -910.452637, -0.238445505, 7.71292363e-09, 0.971155882, 1.2913591e-10, 1, -7.91029819e-09, -0.971155882, -1.76076387e-09, -0.238445505))
		end
	})

	Tab:AddButton({
		Name = "Uncle Pete",
		Callback = function()
			TeleportTo(CFrame.new(-294.208923, 63.4182587, -737.712036, -0.998669028, -7.34403613e-08, -0.05157727, -7.2258743e-08, 1, -2.47743781e-08, 0.05157727, -2.1014495e-08, -0.998669028))
		end
	})

	local Section = Tab:AddSection({
		Name = "Secret Ending"
	})

	Tab:AddButton({
		Name = "Golden Crowbar",
		Callback = function()
			TeleportTo(CFrame.new(-147.337204, 29.4477005, -929.365295, 0.756779075, 4.53537341e-09, -0.653670728, 5.82708326e-09, 1, 1.36845468e-08, 0.653670728, -1.4165173e-08, 0.756779075))
		end
	})

	Tab:AddButton({
		Name = "Purple Mask",
		Callback = function()
			TeleportTo(CFrame.new(102.560722, 29.2477055, -976.389954, -0.951403797, 3.76210636e-08, -0.307946175, 1.89752569e-08, 1, 6.35433466e-08, 0.307946175, 5.46120233e-08, -0.951403797))
		end
	})

	Tab:AddButton({
		Name = "Homeless Kid",
		Callback = function()
			TeleportTo(CFrame.new(-79.4871826, 29.4477024, -932.782715, -0.215949073, 3.18771427e-08, 0.976404607, -7.60385461e-08, 1, -4.94647345e-08, -0.976404607, -8.49262562e-08, -0.215949073))
		end
	})

	local Tab = Window:MakeTab({
		Name = "Humanoid",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})

	local Section = Tab:AddSection({
		Name = "Settings"
	})

	Tab:AddSlider({
		Name = "Walk Speed",
		Min = 0,
		Max = 500,
		Default = 50,
		Color = Color3.fromRGB(0, 255, 0),
		Increment = 1,
		ValueName = "Speed",
		Callback = function(Value)
			ModifiedWalkspeed = Value
		end    
	})

	Tab:AddSlider({
		Name = "Jump Power",
		Min = 0,
		Max = 500,
		Default = 100,
		Color = Color3.fromRGB(0, 255, 0),
		Increment = 1,
		ValueName = "Power",
		Callback = function(Value)
			ModifiedJumpPower = Value
		end    
	})

	local Section = Tab:AddSection({
		Name = "Humanoid"
	})

	Tab:AddToggle({
		Name = "Enable Walk Speed",
		Default = false,
		Callback = function(Value)
			if Value == true then
				OriginalWalkspeed = LocalPlayer.Character.Humanoid.WalkSpeed
				LocalPlayer.Character.Humanoid.WalkSpeed = ModifiedWalkspeed
			else
				LocalPlayer.Character.Humanoid.WalkSpeed = OriginalWalkspeed
			end
		end    
	})

	Tab:AddToggle({
		Name = "Enable Jump Power",
		Default = false,
		Callback = function(Value)
			if Value == true then
				OriginalJumpPower = LocalPlayer.Character.Humanoid.JumpPower
				LocalPlayer.Character.Humanoid.JumpPower = ModifiedJumpPower
				LocalPlayer.Character.Humanoid.UseJumpPower = Value
			else
				LocalPlayer.Character.Humanoid.JumpPower = OriginalJumpPower
			end
		end    
	})

	Tab:AddToggle({
		Name = "Enable Noclip",
		Default = false,
		Callback = function(Value)
			getgenv().Noclipping = Value
			if Noclipping == true then
				spawn(function()
					while Noclipping == true do
						Noclip(false)
						task.wait(.05)
					end
				end)
			end
			if Noclipping == false then
				Noclip(true)
			end
		end
	})

	Tab:AddToggle({
		Name = "Enable Floating",
		Default = false,
		Callback = function(Value)
			getgenv().Float = Value
			if Float == true then
				spawn(function()
					while Float == true do
						Part.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)
						task.wait(.05)
					end
				end)
			end
			if Float == false then
				Part.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, 999, 0)
			end
		end
	})

	local Tab = Window:MakeTab({
		Name = "Combat",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})

	local Section = Tab:AddSection({
		Name = "Kill Enemies"
	})

	Tab:AddButton({
		Name = "Kill All Enemies",
		Callback = function()
			for i = 1, 10 do
				KillEnemies()
			end
		end
	})

	Tab:AddToggle({
		Name = "Loop Kill All",
		Default = false,
		Callback = function(Value)
			getgenv().KillAllLoop = Value
			while KillAllLoop do
				for i = 1, 3 do
					KillEnemies()
				end
				task.wait(.1)
			end
		end
	})

	local Section = Tab:AddSection({
		Name = "Break Enemies"
	})

	Tab:AddButton({
		Name = "Break All Enemies",
		Callback = function()
			BreakEnemies()
		end
	})

	Tab:AddToggle({
		Name = "Loop Break All",
		Default = false,
		Callback = function(Value)
			getgenv().BreakAllLoop = Value
			while BreakAllLoop do
				BreakEnemies()
				task.wait(1)
			end
		end
	})

	local Section = Tab:AddSection({
		Name = "Bring Enemies"
	})
	
	Tab:AddButton({
		Name = "Bring All Enemies",
		Callback = function()
			BringAllEnemies()
		end
	})

	Tab:AddToggle({
		Name = "Loop Bring All",
		Default = false,
		Callback = function(Value)
			getgenv().BringAllLoop = Value
			while BringAllLoop do
				BringAllEnemies()
				task.wait(.1)
			end
		end
	})

	local Tab = Window:MakeTab({
		Name = "Badges",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})

	Tab:AddButton({
		Name = "Dream Team (And The 3 Below)",
		Callback = function()
			GetDog()
			task.wait(5)
			GetAgent()
			task.wait(1)
			GetUncle()
		end
	})

	Tab:AddButton({
		Name = "Operation: Dog Rescue",
		Callback = function()
			GetDog()
		end
	})

	Tab:AddButton({
		Name = "Wake Up, Bradley!",
		Callback = function()
			GetAgent()
		end
	})

	Tab:AddButton({
		Name = "Uncle Pete's Return",
		Callback = function()
			GetUncle()
		end
	})

	Tab:AddButton({
		Name = "The Golden Apple",
		Callback = function()
			GetGAppleBadge()
		end    
	})

	Tab:AddButton({
		Name = "Delivery's Here",
		Callback = function()
			GetAllOutsideItems()
		end    
	})

	Tab:AddButton({
		Name = "So Speedy",
		Callback = function()
			for i = 1, 5 do
				Train("Speed")
			end
		end
	})

	Tab:AddButton({
		Name = "So Strong",
		Callback = function()
			for i = 1, 5 do
				Train("Strength")
			end
		end
	})

	Tab:AddButton({
		Name = "Reformed",
		Callback = function()
			GetSecretEnding()
		end
	})

	Tab:AddButton({
		Name = "Avoid Humiliation",
		Callback = function()
			GiveAll()
			task.wait(4)
			GetDog()
			task.wait(5)
			GetAgent()
			task.wait(1)
			GetUncle()
		end
	})

	local Tab = Window:MakeTab({
		Name = "Misc",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})

	local Section = Tab:AddSection({
		Name = "Harmful"
	})

	Tab:AddSlider({
		Name = "Damange Amount",
		Min = 0,
		Max = 200,
		Default = 5,
		Color = Color3.fromRGB(0, 255, 0),
		Increment = 1,
		ValueName = "Damange",
		Callback = function(Value)
			Damange = Value
		end
	})

	Tab:AddButton({
		Name = "Damange Yourself",
		Callback = function()
			if SemiGodmode == false then
				TakeDamange(Damange)
			else
				Notify('Warning', "Damanging Yourself Won't Work Due To Having 'Semi Godmode' Enabled!", 'rbxassetid://4483345998', 7)
			end
		end
	})

	Tab:AddButton({
		Name = "Slip",
		Callback = function()
			if RemoveSlipping == false then
				Events:WaitForChild("IceSlip"):FireServer(Vector3.new(0, 0, 0))
			else
				Notify('Warning', "Slipping Won't Work Due To Having 'Remove Slipping' Enabled!", 'rbxassetid://4483345998', 7)
			end
		end
	})
        
	local Section = Tab:AddSection({
		Name = "Tools"
	})

	Tab:AddButton({
		Name = "Equip All",
		Callback = function()
			EquipAllTools()
		end
	})

	Tab:AddButton({
		Name = "Unequip All",
		Callback = function()
			UnequipAllTools()
		end
	})

	local Section = Tab:AddSection({
		Name = "Bosses"
	})

	Tab:AddButton({
		Name = "Delete Scary Mary",
		Callback = function()
			if game:GetService("Workspace"):FindFirstChild("Villainess") then
				game:GetService("Workspace").Villainess:Destroy()
			else
				Notify('Warning', "Scary Marry Is Already Deleted Or Boss Fight Hasnt Started!", 'rbxassetid://4483345998', 7)
			end
		end
	})

	Tab:AddButton({
		Name = "Delete Scary Larry",
		Callback = function()
			if game:GetService("Workspace"):FindFirstChild("BigBoss") then
				game:GetService("Workspace").BigBoss:Destroy()
			else
				Notify('Warning', "Scary Larry Is Already Deleted Or Boss Fight Hasnt Started!", 'rbxassetid://4483345998', 7)
			end
		end
	})

	local Section = Tab:AddSection({
		Name = "NPC's"
	})

	Tab:AddButton({
		Name = "Get All NPC's",
		Callback = function()
			GetDog()
			task.wait(5)
			GetAgent()
			task.wait(1)
			GetUncle()
		end
	})

	Tab:AddButton({
		Name = "Get Dog",
		Callback = function()
			GetDog()
		end
	})

	Tab:AddButton({
		Name = "Get Agent Bradley",
		Callback = function()
			GetAgent()
		end
	})

	Tab:AddButton({
		Name = "Get Uncle Pete",
		Callback = function()
			GetUncle()
		end
	})

	local Section = Tab:AddSection({
		Name = "Cash"
	})

	Tab:AddButton({
		Name = "Collect Cash",
		Callback = function()
			CollectCash()
		end    
	})

	Tab:AddToggle({
		Name = "Auto Collect Cash",
		Default = false,
		Callback = function(Value)
			getgenv().CollectAllCash = Value

			while CollectAllCash do
				CollectCash()
				task.wait(1)
			end
		end    
	})

	local Section = Tab:AddSection({
		Name = "Others"
	})
	
	Tab:AddToggle({
		Name = "Auto Claim Uncle Pete Quests",
		Default = false,
		Callback = function(Value)
			getgenv().AutoPete = Value

			while AutoPete do
				ClickPete()
				task.wait(10)
			end
		end    
	})

	Tab:AddButton({
		Name = "Get All Items From Outside",
		Callback = function()
			GetAllOutsideItems()
		end    
	})

	Tab:AddButton({
		Name = "Break Fallen Trees",
		Callback = function()
			BreakBarricades()
		end    
	})

	Tab:AddToggle({
		Name = "Hidden Items ESP",
		Default = false,
		Callback = function(Value)
			if Value == true then
				for i, v in pairs(game:GetService("Workspace").Hidden:GetChildren()) do
					local highlight = Instance.new("Highlight")
					highlight.Parent = v
					highlight.FillColor = Color3.fromRGB(255, 0, 255)
					highlight.FillTransparency = 0
					highlight.OutlineTransparency = 0
					highlight.OutlineColor = Color3.fromRGB(0, 0, 255)
				end
			else
				for i, v in pairs(game:GetService("Workspace").Hidden:GetChildren()) do
					if v:FindFirstChild("Highlight") then
						v:FindFirstChild("Highlight"):Destroy()
					end
				end
			end
		end    
	})

	Tab:AddToggle({
		Name = "Full Bright",
		Default = false,
		Callback = function(Value)
			if Value == true then
				Lighting.Brightness = 1
				Lighting.FogEnd = 999999
				Lighting.GlobalShadows = false
			else
				Lighting.Brightness = OriginalBrightness
				Lighting.FogEnd = OriginalFog
				Lighting.GlobalShadows = GlobalShadows
			end
		end    
	})



	Notify('MadoHub!', "Script Successfully Loaded!", 'rbxassetid://4483345998', 15)
	ScriptLoaded = true
	OrionLib:Init()
end

